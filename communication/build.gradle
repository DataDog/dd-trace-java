apply from: "$rootDir/gradle/java.gradle"

dependencies {
  implementation libs.slf4j

  api project(':remote-config:remote-config-api')
  implementation project(':remote-config:remote-config-core')
  implementation project(':internal-api')
  implementation project(':utils:container-utils')
  implementation project(':utils:socket-utils')
  implementation project(':utils:version-utils')

  api libs.okio
  api libs.okhttp
  api libs.moshi
  implementation libs.dogstatsd

  testImplementation project(':utils:test-utils')
  testImplementation libs.bundles.junit5
  testImplementation libs.truth
  testImplementation libs.bytebuddy
  testImplementation group: 'org.msgpack', name: 'msgpack-core', version: '0.8.20'
  testImplementation group: 'org.msgpack', name: 'jackson-dataformat-msgpack', version: '0.8.20'
  testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: libs.versions.okhttp.legacy.get()
}

ext {
  minimumBranchCoverage = 0.6
  minimumInstructionCoverage = 0.8
  excludedClassesCoverage = [
    'datadog.communication.ddagent.ExternalAgentLauncher',
    'datadog.communication.ddagent.ExternalAgentLauncher.NamedPipeHealthCheck',
    'datadog.communication.ddagent.SharedCommunicationObjects.FixedConfigUrlSupplier',
    'datadog.communication.ddagent.SharedCommunicationObjects.RetryConfigUrlSupplier',
    'datadog.communication.http.OkHttpUtils',
    'datadog.communication.http.OkHttpUtils.1',
    'datadog.communication.http.OkHttpUtils.ByteBufferRequestBody',
    'datadog.communication.http.OkHttpUtils.CustomListener',
    'datadog.communication.http.OkHttpUtils.GZipByteBufferRequestBody',
    'datadog.communication.http.OkHttpUtils.GZipRequestBodyDecorator',
    'datadog.communication.http.OkHttpUtils.JsonRequestBody',
    'datadog.communication.monitor.DDAgentStatsDConnection',
    'datadog.communication.monitor.DDAgentStatsDConnection.*',
    'datadog.communication.monitor.LoggingStatsDClient',
    'datadog.communication.BackendApiFactory',
    'datadog.communication.BackendApiFactory.Intake',
    'datadog.communication.EvpProxyApi',
    'datadog.communication.IntakeApi',
    'datadog.communication.util.IOUtils',
    'datadog.communication.util.IOUtils.1',
  ]
  excludedClassesBranchCoverage = [
    'datadog.communication.ddagent.TracerVersion',
    'datadog.communication.BackendApiFactory',
    'datadog.communication.EvpProxyApi',
    'datadog.communication.IntakeApi',
  ]
  excludedClassesInstructionCoverage = [
    // can't reach the error condition now
    'datadog.communication.fleet.FleetServiceImpl',
    'datadog.communication.ddagent.SharedCommunicationObjects',
    'datadog.communication.ddagent.TracerVersion',
    'datadog.communication.BackendApiFactory',
    'datadog.communication.BackendApiFactory.Intake',
    'datadog.communication.EvpProxyApi',
    'datadog.communication.IntakeApi',
    'datadog.communication.util.IOUtils',
    'datadog.communication.util.IOUtils.1',
  ]
}
