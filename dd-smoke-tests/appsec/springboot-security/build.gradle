plugins {
  id 'java'
  id "com.github.johnrengelman.shadow"
}

apply from: "$rootDir/gradle/java.gradle"
description = 'SpringBoot Smoke Tests.'

// The standard spring-boot plugin doesn't play nice with our project
// so we'll build a fat jar instead
jar {
  manifest {
    attributes('Main-Class': 'datadog.smoketest.appsec.springbootsecurity.SpringbootApplication')
  }
}

// User Java 17 to build application
def jdkVersion = 17
def latestJdkHome = System.getenv("JAVA_${jdkVersion}_HOME")
if (latestJdkHome != null) {
  tasks.withType(JavaCompile) {
    options.fork = true
    options.release = jdkVersion
    compileJava.options.forkOptions.javaHome = file(latestJdkHome)
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
  implementation 'org.springframework.boot:spring-boot-starter-security:3.1.0'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.1.0'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.1.0'
  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
  implementation 'com.h2database:h2:2.1.212'

  testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
  testImplementation 'org.springframework.security:spring-security-test:6.0.2'

  testImplementation project(':dd-smoke-tests:appsec')
}

tasks.withType(Test).configureEach {
  dependsOn "shadowJar"

  jvmArgs "-Ddatadog.smoketest.appsec.springbootsecurity.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
}

task testRuntimeActivation(type: Test) {
  jvmArgs '-Dsmoke_test.appsec.enabled=inactive',
    "-Ddatadog.smoketest.appsec.springbootsecurity.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
}
tasks['check'].dependsOn(testRuntimeActivation)