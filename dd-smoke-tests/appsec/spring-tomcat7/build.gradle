import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
  id 'com.gradleup.shadow'
}

apply from: "$rootDir/gradle/java.gradle"
description = 'Spring Tomcat7 Smoke Tests.'

jar {
  manifest {
    attributes('Main-Class': 'datadog.smoketest.appsec.springtomcat7.Main')
  }
}

dependencies {
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '7.0.47'
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '7.0.47'
  implementation group: 'org.apache.tomcat', name: 'tomcat-juli', version: '7.0.47'
  implementation group: 'org.springframework', name: 'spring-webmvc', version: '4.0.0.RELEASE'

  testImplementation project(':dd-smoke-tests:appsec')
}

tasks.withType(Test).configureEach {
  def shadowJarTask = tasks.named('shadowJar', ShadowJar)
  dependsOn shadowJarTask

  jvmArgumentProviders.add(new CommandLineArgumentProvider() {
      @Override
      Iterable<String> asArguments() {
        return shadowJarTask.map { ["-Ddatadog.smoketest.appsec.springtomcat7.shadowJar.path=${it.archiveFile.get()}"] }.get()
      }
    })
}

tasks.register('testRuntimeActivation', Test) {
  def shadowJarTask = tasks.named('shadowJar', ShadowJar)
  jvmArgs '-Dsmoke_test.appsec.enabled=inactive'
  jvmArgumentProviders.add(new CommandLineArgumentProvider() {
      @Override
      Iterable<String> asArguments() {
        return shadowJarTask.map { ["-Ddatadog.smoketest.appsec.springtomcat7.shadowJar.path=${it.archiveFile.get()}"] }.get()
      }
    })
}

tasks.named('check') {
  dependsOn(testRuntimeActivation)
}
