import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
  id 'com.gradleup.shadow'
}

apply from: "$rootDir/gradle/java.gradle"
description = 'SpringBoot GraphQL Smoke Tests.'

// The standard spring-boot plugin doesn't play nice with our project
// so we'll build a fat jar instead
jar {
  manifest {
    attributes('Main-Class': 'datadog.smoketest.appsec.springbootgraphql.SpringbootGraphqlApplication')
  }
}

shadowJar {
  mergeServiceFiles {
    include 'META-INF/spring.*'
  }
}

// Use Java 11 to build application
tasks.withType(JavaCompile).configureEach {
  configureCompiler(it, 11, JavaVersion.VERSION_1_8)
}

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.0'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-graphql', version: '2.7.0'
  implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.3')

  testImplementation project(':dd-smoke-tests:appsec')
}

tasks.withType(Test).configureEach {
  def shadowJarTask = tasks.named('shadowJar', ShadowJar)
  dependsOn shadowJarTask

  jvmArgumentProviders.add(new CommandLineArgumentProvider() {
      @Override
      Iterable<String> asArguments() {
        return shadowJarTask.map { ["-Ddatadog.smoketest.appsec.springboot-graphql.shadowJar.path=${it.archiveFile.get()}"] }.get()
      }
    })
}

tasks.register('testRuntimeActivation', Test) {
  def shadowJarTask = tasks.named('shadowJar', ShadowJar)
  jvmArgs '-Dsmoke_test.appsec.enabled=inactive'
  jvmArgumentProviders.add(new CommandLineArgumentProvider() {
      @Override
      Iterable<String> asArguments() {
        return shadowJarTask.map { ["-Ddatadog.smoketest.appsec.springboot-graphql.shadowJar.path=${it.archiveFile.get()}"] }.get()
      }
    })
}

tasks.named('check') {
  dependsOn(testRuntimeActivation)
}
