import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
  id 'com.gradleup.shadow'
  id 'com.google.protobuf' version '0.8.18'
}

ext {
  // TODO Java 17: This version of spring-boot doesn't support Java 17
  maxJavaVersionForTests = JavaVersion.VERSION_15
}

apply from: "$rootDir/gradle/java.gradle"
description = 'SpringBoot/gRPC combined Smoke Tests.'

protobuf {
  protoc {
    // First version with Mac M1 support
    artifact = "com.google.protobuf:protoc:3.17.3"
  }
  plugins {
    grpc {
      // First version with Mac M1 support
      artifact = 'io.grpc:protoc-gen-grpc-java:1.42.2'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

// The standard spring-boot plugin doesn't play nice with our project
// so we'll build a fat jar instead
tasks.named("jar", Jar) {
  manifest {
    attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootGrpcApplication')
  }
}

tasks.named("shadowJar", ShadowJar) {
  configurations = [project.configurations.runtimeClasspath]
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web:1.5.18.RELEASE'
  implementation 'io.grpc:grpc-netty-shaded:1.42.2'
  implementation 'io.grpc:grpc-protobuf:1.42.2'
  implementation 'io.grpc:grpc-stub:1.42.2'
  implementation 'org.apache.tomcat:annotations-api:6.0.53'
  implementation 'com.google.cloud:google-cloud-spanner:1.61.0'

  testImplementation project(':dd-smoke-tests')
}

tasks.withType(Test).configureEach {
  def shadowJarTask = tasks.named('shadowJar', ShadowJar)
  dependsOn shadowJarTask

  jvmArgumentProviders.add(new CommandLineArgumentProvider() {
      @Override
      Iterable<String> asArguments() {
        return shadowJarTask.map { ["-Ddatadog.smoketest.springboot-grpc.shadowJar.path=${it.archiveFile.get()}"] }.get()
      }
    })
}
