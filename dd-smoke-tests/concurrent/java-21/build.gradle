plugins {
  id 'application'
  id 'com.gradleup.shadow'
}

ext {
  minJavaVersionForTests = JavaVersion.VERSION_21
}

apply from: "$rootDir/gradle/java.gradle"

description = 'JDK 21 Concurrent Integration Tests'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}
tasks.withType(JavaCompile).configureEach {
  setJavaVersion(it, 21)
  sourceCompatibility = JavaVersion.VERSION_21
  targetCompatibility = JavaVersion.VERSION_21
}

// Disable plugin tasks that do not support Java 21:
// * forbiddenApis is missing classes
// * spotless as the google-java-format version does not support Java 21 and can't be changed once applied
// * spotbugs failed to read class using newer bytecode versions
forbiddenApisMain {
  failOnMissingClasses = false
}
['spotlessApply', 'spotlessCheck', 'spotlessJava', 'spotbugsMain'].each {
  tasks.named(it).configure { enabled = false }
}

application {
  mainClass = 'datadog.smoketest.concurrent.ConcurrentApp'
}

dependencies {
  implementation group: 'io.opentelemetry.instrumentation', name: 'opentelemetry-instrumentation-annotations', version: '2.13.3'
  testImplementation project(':dd-smoke-tests')
}

tasks.withType(Test).configureEach {
  dependsOn "shadowJar"
  jvmArgs "-Ddatadog.smoketest.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
}
