ext {
  minJavaVersionForTests = JavaVersion.VERSION_11
}

apply from: "$rootDir/gradle/java.gradle"

jar {
  manifest {
    attributes('Main-Class': 'datadog.smoketest.moduleapp.ModuleApplication')
  }
}

// java.gradle generates a test task per jdk and assigns the test task its own java executable
// For each Test task, this loop creates a jlink image using the test's executable
// At the end, we have 1 jlink image per JVM: each one used by a testXXXGenerated task
tasks.withType(Test).configureEach {
  def javaExecutable = it.executable
  def javaVersion = getJavaExecutableVersion(javaExecutable)

  // Only Java 9 and above have jlink
  if (JavaVersion.VERSION_1_9.compareTo(javaVersion) > 0) {
    return
  }

  // JAVA_HOME/bin/java -> JAVA_HOME
  def specificJDKHome = file(javaExecutable).parentFile.parent
  def jlinkExecutable = specificJDKHome + "/bin/jlink"
  def jdkModulesPath = specificJDKHome + "/jmods"
  def generatedImageDir = "${buildDir}/${it.name}image"

  doFirst {
    delete generatedImageDir

    // Run the jlink command to create the image
    exec {
      commandLine jlinkExecutable, '--no-man-pages', '--no-header-files',
        '--add-modules', 'java.instrument,datadog.smoketest.moduleapp',
        "--module-path", "${jdkModulesPath}:" + jar.archiveFile.get().toString(), "--output", generatedImageDir
    }
  }

  jvmArgs "-Ddatadog.smoketest.module.image=${generatedImageDir}"
  dependsOn "jar"
}

dependencies {
  testImplementation project(':dd-smoke-tests')
}
