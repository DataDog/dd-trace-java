import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
  id 'com.gradleup.shadow'
  id 'java'
  id 'org.jetbrains.kotlin.jvm' version '1.9.24'
  id 'scala'
  id 'groovy'
}

apply from: "$rootDir/gradle/java.gradle"
description = 'IAST propagation Smoke Tests.'

// The standard spring-boot plugin doesn't play nice with our project
// so we'll build a fat jar instead
tasks.named("jar", Jar) {
  manifest {
    attributes('Main-Class': 'datadog.smoketest.springboot.SpringbootApplication')
  }
}

tasks.named("shadowJar", ShadowJar) {
  configurations = [project.configurations.runtimeClasspath]
}

dependencies {
  implementation project(':dd-trace-api')
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.5.4'
  implementation libs.scala
  implementation libs.groovy
  implementation libs.kotlin

  testImplementation project(':dd-smoke-tests')
  testImplementation(testFixtures(project(":dd-smoke-tests:iast-util")))
}

tasks.withType(Test).configureEach {
  dependsOn "shadowJar"
  jvmArgs "-Ddatadog.smoketest.springboot.shadowJar.path=${tasks.shadowJar.archiveFile.get()}"
}

tasks.withType(ScalaCompile).configureEach {
  // Despite the compatibility matrix, scala compiler doesn't properly
  // get the right compiler flags with JDK11 toolchain. Using 8 works.
  // * https://docs.scala-lang.org/overviews/jdk-compatibility/overview.html
  // * https://github.com/gradle/gradle/issues/19456
  configureCompiler(it, 8)
}

tasks.withType(KotlinCompile).configureEach {
  compilerOptions.jvmTarget = JvmTarget.JVM_1_8
}
