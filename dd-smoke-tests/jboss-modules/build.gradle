
apply from: "$rootDir/gradle/java.gradle"
description = 'JBoss Modules Smoke Tests.'

configurations {
  jbossModulesV1
  jbossModulesV2
}

configurations.matching { name =~ /jbossModules.*/ }.configureEach {
  exclude module: 'forbiddenapis'
  exclude module: 'jcip-annotations'
  exclude module: 'spotbugs-annotations'
}

dependencies {
  compileOnly group: 'org.jboss.modules', name: 'jboss-modules', version: '1.3.0.Final'
  compileOnly group: 'com.google.guava', name: 'guava', version: '20.0'
  compileOnly group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

  jbossModulesV1 'org.jboss.modules:jboss-modules:1.3.0.Final'
  jbossModulesV2 'org.jboss.modules:jboss-modules:2.0.0.Final'

  testImplementation project(':dd-smoke-tests')
}

tasks.register('libraryModules', Copy) {
  from configurations.compileClasspath
  into libsDirectory.dir('test-repo')
  exclude '**/jboss-modules-*'
  rename '(.*)(-[0-9][^-]*)\\.jar', '$1/main/$1.jar'
}

def packageTestModule(jar, name) {
  jar.destinationDirectory = libsDirectory.dir("test-repo/${name}/main")
  jar.archiveFileName = "${name}.jar"
  jar.from sourceSets.main.output
  jar.include "datadog/smoketest/jbossmodules/${name}/**"
}

tasks.register('commonModule', Jar) {
  packageTestModule(it, 'common')
}
tasks.register('clientModule', Jar) {
  packageTestModule(it, 'client')
  it.include "META-INF/services/datadog.smoketest.jbossmodules.messaging.ClientSupport"
}
tasks.register('messagingModule', Jar) {
  packageTestModule(it, 'messaging')
}
tasks.register('publishingModule', Jar) {
  packageTestModule(it, 'publishing')
  it.include "META-INF/services/datadog.smoketest.jbossmodules.messaging.PublisherSupport"
}
tasks.register('subscribingModule', Jar) {
  packageTestModule(it, 'subscribing')
  it.include "META-INF/services/datadog.smoketest.jbossmodules.messaging.SubscriberSupport"
}
tasks.register('appModule', Jar) {
  packageTestModule(it, 'app')
}

tasks.register('moduleDescriptors', Copy) {
  from sourceSets.main.output.resourcesDir
  into libsDirectory.dir('test-repo')
  dependsOn "processResources"
}

tasks.withType(Test).configureEach {
  dependsOn "moduleDescriptors",
    "libraryModules",
    "commonModule",
    "clientModule",
    "messagingModule",
    "publishingModule",
    "subscribingModule",
    "appModule"

  jvmArgs "-Ddatadog.smoketest.jbossmodules.JBossModulesV1=${configurations.jbossModulesV1.asPath}"
  jvmArgs "-Ddatadog.smoketest.jbossmodules.JBossModulesV2=${configurations.jbossModulesV2.asPath}"
  jvmArgs "-Ddatadog.smoketest.jbossmodules.repoPath=${libsDirectory.dir('test-repo').get()}"
}
