plugins {
  id 'biz.aQute.bnd.builder' version '6.1.0' apply false
}

ext {
  minJavaVersionForTests = JavaVersion.VERSION_1_8
}

apply from: "$rootDir/gradle/java.gradle"
description = 'OSGi Application Smoke Tests.'

configurations {
  equinox
  felix
  bundles
}

configurations.bundles {
  transitive = false
}

dependencies {
  compileOnly group: 'org.osgi', name: 'org.osgi.core', version: '4.2.0'
  compileOnly group: 'org.osgi', name: 'org.osgi.compendium', version: '4.2.0'
  compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
  compileOnly group: 'com.google.guava', name: 'guava', version: '20.0'
  compileOnly group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

  equinox 'org.eclipse.platform:org.eclipse.osgi:3.15.300'
  felix 'org.apache.felix:org.apache.felix.framework:6.0.4'

  bundles 'org.ops4j.pax.logging:pax-logging-api:1.11.0'
  bundles 'com.google.guava:guava:20.0'
  bundles 'org.apache.felix:org.apache.felix.configadmin:1.9.18'
  bundles 'org.apache.httpcomponents:httpcore-osgi:4.4.14'
  bundles 'org.apache.httpcomponents:httpclient-osgi:4.5.13'

  testImplementation project(':dd-smoke-tests')
}

jar {
  include 'datadog/smoketest/osgi/app/**'
}

import aQute.bnd.gradle.Bundle

tasks.register('commonBundle', Bundle) {
  classifier = 'common'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/common/**'
  manifest {
    attributes('Export-Package': 'datadog.smoketest.osgi.common')
  }
}

tasks.register('clientBundle', Bundle) {
  classifier = 'client'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/client/**'
  manifest {
    attributes('Bundle-Activator': 'datadog.smoketest.osgi.client.Activator')
  }
}

tasks.register('messagingBundle', Bundle) {
  classifier = 'messaging'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/messaging/**'
  manifest {
    attributes('Export-Package': 'datadog.smoketest.osgi.messaging')
  }
}

tasks.register('publishingBundle', Bundle) {
  classifier = 'publishing'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/publishing/**'
  manifest {
    attributes('Bundle-Activator': 'datadog.smoketest.osgi.publishing.Activator')
  }
}

tasks.register('subscribingBundle', Bundle) {
  classifier = 'subscribing'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/subscribing/**'
  manifest {
    attributes('Bundle-Activator': 'datadog.smoketest.osgi.subscribing.Activator')
  }
}

tasks.withType(Test).configureEach {
  dependsOn "commonBundle", "clientBundle", "messagingBundle", "publishingBundle", "subscribingBundle", "jar"

  jvmArgs "-Ddatadog.smoketest.osgi.appJar.path=${tasks.jar.archivePath}"
  jvmArgs "-Ddatadog.smoketest.osgi.equinoxJar.path=${configurations.equinox.first().path}"
  jvmArgs "-Ddatadog.smoketest.osgi.felixJar.path=${configurations.felix.first().path}"

  jvmArgs "-Ddatadog.smoketest.osgi.bundle.paths=" +
    "${tasks.commonBundle.archivePath}," +
    "${tasks.clientBundle.archivePath}," +
    "${tasks.messagingBundle.archivePath}," +
    "${tasks.publishingBundle.archivePath}," +
    "${tasks.subscribingBundle.archivePath}," +
    "${configurations.bundles*.path.join(',')}"
}
