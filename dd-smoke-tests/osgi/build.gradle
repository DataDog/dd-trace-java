import aQute.bnd.gradle.Bundle

plugins {
  id 'biz.aQute.bnd.builder' version '6.1.0' apply true
}

repositories {
  maven {
    url = 'https://resources.knopflerfish.org/repo/maven2/release'
  }
}

apply from: "$rootDir/gradle/java.gradle"
description = 'OSGi Application Smoke Tests.'

configurations {
  register('equinox')
  register('felix')
  register('knopflerfish')
  register('bundles') {
    transitive = false
  }
}

dependencies {
  compileOnly group: 'org.osgi', name: 'org.osgi.core', version: '4.2.0'
  compileOnly group: 'org.osgi', name: 'org.osgi.compendium', version: '4.2.0'
  compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
  compileOnly group: 'com.google.guava', name: 'guava', version: '20.0'
  compileOnly group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

  equinox 'org.eclipse.platform:org.eclipse.osgi:3.15.300'
  felix 'org.apache.felix:org.apache.felix.framework:6.0.5'
  knopflerfish 'org.knopflerfish.kf6:framework:8.0.11'

  bundles 'org.ops4j.pax.logging:pax-logging-api:1.11.0'
  bundles 'com.google.guava:guava:20.0'
  bundles 'org.apache.felix:org.apache.felix.configadmin:1.9.18'
  bundles 'org.apache.httpcomponents:httpcore-osgi:4.4.14'
  bundles 'org.apache.httpcomponents:httpclient-osgi:4.5.13'

  testImplementation project(':dd-smoke-tests')
}

// The bnd builder plugin modifies the jar task to post process it with bnd.
// Since this cannot be disabled, we disable the jar task and create another one.
tasks.named('jar', Jar) {
  enabled = false
}

def jarTask = tasks.register("appJar", Jar) {
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/app/**'
}

def commonBundle = tasks.register('commonBundle', Bundle) {
  archiveClassifier = 'common'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/common/**'
  manifest {
    attributes('Export-Package': 'datadog.smoketest.osgi.common')
  }
}

def clientBundle = tasks.register('clientBundle', Bundle) {
  archiveClassifier = 'client'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/client/**'
  manifest {
    attributes('Bundle-Activator': 'datadog.smoketest.osgi.client.Activator')
  }
}

def messagingBundle = tasks.register('messagingBundle', Bundle) {
  archiveClassifier = 'messaging'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/messaging/**'
  manifest {
    attributes('Export-Package': 'datadog.smoketest.osgi.messaging')
  }
}

def publishingBundle = tasks.register('publishingBundle', Bundle) {
  archiveClassifier = 'publishing'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/publishing/**'
  manifest {
    attributes('Bundle-Activator': 'datadog.smoketest.osgi.publishing.Activator')
  }
}

def subscribingBundle = tasks.register('subscribingBundle', Bundle) {
  archiveClassifier = 'subscribing'
  from sourceSets.main.output
  include 'datadog/smoketest/osgi/subscribing/**'
  manifest {
    attributes('Bundle-Activator': 'datadog.smoketest.osgi.subscribing.Activator')
  }
}

tasks.withType(Test).configureEach {
  dependsOn commonBundle, clientBundle, messagingBundle, publishingBundle, subscribingBundle, jarTask

  jvmArgumentProviders.add(new CommandLineArgumentProvider() {
      @Override
      Iterable<String> asArguments() {
        // def jarTask = tasks.named('appJar', Jar).get()
        def equinoxJar = configurations.named('equinox').get().first().path
        def felixJar = configurations.named('felix').get().first().path
        def knopflerfishJar = configurations.named('knopflerfish').get().first().path

        def bundlePaths = [
          commonBundle.get().archiveFile.get(),
          clientBundle.get().archiveFile.get(),
          messagingBundle.get().archiveFile.get(),
          publishingBundle.get().archiveFile.get(),
          subscribingBundle.get().archiveFile.get(),
          *configurations.named('bundles').get().collect {
            it.path
          }
        ].join(',')

        return [
          "-Ddatadog.smoketest.osgi.appJar.path=${jarTask.get().archiveFile.get()}",
          "-Ddatadog.smoketest.osgi.equinoxJar.path=${equinoxJar}",
          "-Ddatadog.smoketest.osgi.felixJar.path=${felixJar}",
          "-Ddatadog.smoketest.osgi.knopflerfishJar.path=${knopflerfishJar}",
          "-Ddatadog.smoketest.osgi.bundle.paths=${bundlePaths}"
        ]
      }
    })
}
