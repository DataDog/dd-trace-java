import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

apply from: "$rootDir/gradle/java.gradle"

description = 'dd-smoke-tests'

dependencies {
  api libs.bundles.spock
  api libs.okhttp
  api project(':dd-java-agent:testing')
  api project(':utils:test-agent-utils:decoder')
}

tasks.withType(GroovyCompile).configureEach {
  configureCompiler(
    it,
    8,
    JavaVersion.VERSION_1_8,
    "CharBuffer#flip() signature needs to be ()Ljava.nio.Buffer (to run on JDK8)."
    )
}

// Disable forbiddenApis for all smoke-test modules
allprojects {
  tasks.matching { it.name.startsWith('forbiddenApis') }.configureEach {
    enabled = false
  }
}

Project parent_project = project
subprojects { Project subProj ->
  // Don't need javadoc task run for internal projects.
  subProj.tasks.withType(Javadoc).configureEach { enabled = false }

  subProj.evaluationDependsOn ':dd-java-agent'
  subProj.tasks.withType(Test).configureEach { subTask ->
    def agentTaskRef = project(':dd-java-agent').tasks.named('shadowJar', ShadowJar)
    dependsOn agentTaskRef

    // Tests depend on this to know where to run things and what agent jar to use
    jvmArgs "-Ddatadog.smoketest.builddir=${buildDir}"
    jvmArgumentProviders.add(new CommandLineArgumentProvider() {
        @Override
        Iterable<String> asArguments() {
          return agentTaskRef.map { ["-Ddatadog.smoketest.agent.shadowJar.path=${it.archiveFile.get()}"] }.get()
        }
      })
  }
}
