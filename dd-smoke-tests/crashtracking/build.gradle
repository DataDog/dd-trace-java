import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
  id 'com.gradleup.shadow'
}

ext {
  excludeJdk = ['IBM8']
}

apply from: "$rootDir/gradle/java.gradle"

description = 'Crashtracking Integration Tests.'

tasks.named("jar", Jar) {
  manifest {
    attributes('Main-Class': 'datadog.smoketest.crashtracking.CrashtrackingTestApplication')
  }
}

dependencies {
  testImplementation project(':dd-smoke-tests')
  testImplementation project(':dd-java-agent:agent-profiling:profiling-testing')
  testImplementation project(path: ':dd-java-agent:ddprof-lib', configuration: 'shadow')

  testImplementation libs.bundles.junit5
  testImplementation libs.bundles.mockito
}

tasks.withType(Test).configureEach {
  def shadowJarTask = tasks.named('shadowJar', ShadowJar)
  dependsOn shadowJarTask
  jvmArgumentProviders.add(new CommandLineArgumentProvider() {
      @Override
      Iterable<String> asArguments() {
        return shadowJarTask.map { ["-Ddatadog.smoketest.app.shadowJar.path=${it.archiveFile.get()}"] }.get()
      }
    })

  testLogging {
    events "started", "passed", "skipped", "failed"
    showStandardStreams = true
  }
}

