.benchmarks:
  stage: benchmarks
  interruptible: true
  timeout: 1h
  tags: ["runner:apm-k8s-tweaked-metal"]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/benchmarking-platform:dd-trace-java-benchmarks
  needs: [ "build", "publish-artifacts-to-s3" ]
  rules:
    - if: '$POPULATE_CACHE'
      when: never
    - if: '$CI_COMMIT_TAG =~ /^v?[0-9]+\.[0-9]+\.[0-9]+$/'
      when: manual
      allow_failure: true
    - when: on_success
  script:
    - export ARTIFACTS_DIR="$(pwd)/reports" && mkdir -p "${ARTIFACTS_DIR}"
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/".insteadOf "https://github.com/DataDog/"
    - git clone --branch dd-trace-java/tracer-benchmarks-parallel https://github.com/DataDog/benchmarking-platform.git /platform && cd /platform
  artifacts:
    name: "reports"
    paths:
      - reports/
    expire_in: 3 months
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID # The ID of the current project. This ID is unique across all projects on the GitLab instance.
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME # "dd-trace-java"
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME # The branch or tag name for which project is built.
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA # The commit revision the project is built for.

benchmarks-startup:
  extends: .benchmarks
  script:
    - !reference [ .benchmarks, script ]
    - ./steps/capture-hardware-software-info.sh
    - ./steps/run-benchmarks.sh startup
    - ./steps/analyze-results.sh startup

benchmarks-load:
  extends: .benchmarks
  script:
    - !reference [ .benchmarks, script ]
    - ./steps/capture-hardware-software-info.sh
    - ./steps/run-benchmarks.sh load
    - ./steps/analyze-results.sh load

benchmarks-dacapo:
  extends: .benchmarks
  script:
    - !reference [ .benchmarks, script ]
    - ./steps/capture-hardware-software-info.sh
    - ./steps/run-benchmarks.sh dacapo
    - ./steps/analyze-results.sh dacapo

benchmarks-post-results:
  extends: .benchmarks
  tags: ["arch:amd64"]
  script:
    - !reference [ .benchmarks, script ]
    - ./steps/upload-results-to-s3.sh
    - ./steps/post-pr-comment.sh
  needs:
    - job: benchmarks-startup
      artifacts: true
    - job: benchmarks-load
      artifacts: true
    - job: benchmarks-dacapo
      artifacts: true

check-big-regressions:
  extends: .benchmarks
  needs:
    - job: benchmarks-startup
      artifacts: true
    - job: benchmarks-load
      artifacts: true
  when: on_success
  tags: ["arch:amd64"]
  rules:
    - if: '$POPULATE_CACHE'
      when: never
    - if: '$CI_COMMIT_BRANCH !~ /^(master|release\/)/'
      when: on_success
    - when: never
  # ARTIFACTS_DIR /go/src/github.com/DataDog/apm-reliability/dd-trace-java/reports/
  # need to convert them
  script:
    - !reference [ .benchmarks, script ]
    - | 
      for benchmarkType in startup load; do
          find "$ARTIFACTS_DIR/$benchmarkType" -name "benchmark-baseline.json" -o -name "benchmark-candidate.json" | while read file; do
            relpath="${file#$ARTIFACTS_DIR/$benchmarkType/}"
            prefix="${relpath%/benchmark-*}" # Remove the trailing /benchmark-(baseline|candidate).json
            prefix="${prefix#./}" # Remove any leading ./
            prefix="${prefix//\//-}" # Replace / with -
            case "$file" in
              *benchmark-baseline.json) type="baseline" ;;
              *benchmark-candidate.json) type="candidate" ;;
            esac
            echo "Moving $file to $ARTIFACTS_DIR/${type}-${prefix}.converted.json"
            cp "$file" "$ARTIFACTS_DIR/${type}-${prefix}.converted.json"
          done
      done
    - bp-runner $CI_PROJECT_DIR/.gitlab/benchmarks/bp-runner.fail-on-regression.yml --debug

.dsm-kafka-benchmarks:
  stage: benchmarks
  rules:
    - if: '$POPULATE_CACHE'
      when: never
    - if: $CI_PIPELINE_SOURCE != "schedule"
      changes:
        paths:
          - dd-java-agent/instrumentation/kafka*/**/*
        compare_to: "master"
      when: on_success
    - when: manual
      allow_failure: true
  tags: ["runner:apm-k8s-tweaked-metal"]
  interruptible: true
  timeout: 1h
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/benchmarking-platform:java-dsm-kafka
  needs: [ "build", "publish-artifacts-to-s3"]
  script:
    - git clone --branch java/kafka-dsm-overhead https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform.git platform && cd platform
    - ./steps/run-benchmarks.sh
  artifacts:
    name: "artifacts"
    when: always
    paths:
      - platform/artifacts/
    expire_in: 3 months
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID # The ID of the current project. This ID is unique across all projects on the GitLab instance.
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME # "dd-trace-java"
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME # The branch or tag name for which project is built.
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA # The commit revision the project is built for.
    FF_USE_LEGACY_KUBERNETES_EXECUTION_STRATEGY: "true"

dsm-kafka-producer-benchmark:
  extends: .dsm-kafka-benchmarks
  variables:
    BP_KAFKA_SCENARIO_DIR: producer-benchmark

dsm-kafka-consumer-benchmark:
  extends: .dsm-kafka-benchmarks
  variables:
    BP_KAFKA_SCENARIO_DIR: consumer-benchmark

debugger-benchmarks:
  stage: benchmarks
  rules:
    - if: '$POPULATE_CACHE'
      when: never
    - if: $CI_PIPELINE_SOURCE != "schedule"
      changes:
        paths:
          - dd-java-agent/agent-debugger/**/*
        compare_to: "master"
      when: on_success
    - when: manual
      allow_failure: true
  tags: ["runner:apm-k8s-tweaked-metal"]
  interruptible: true
  timeout: 1h
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/benchmarking-platform:java-debugger
  needs: ["build", "publish-artifacts-to-s3"]
  script:
    - export ARTIFACTS_DIR="$(pwd)/reports" && mkdir -p "${ARTIFACTS_DIR}"
    - git clone --branch java/debugger-benchmarks https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform.git /platform && cd /platform
    - numactl --cpunodebind=1 --membind=1 bp-runner bp-runner.yml --debug
    - "./steps/create-report.sh || :"
    - "./steps/post-pr-comment.sh || :"
  artifacts:
    name: "artifacts"
    when: always
    paths:
      - /go/src/github.com/DataDog/apm-reliability/dd-trace-java/reports/
    expire_in: 3 months
  variables:
    UPSTREAM_PROJECT_ID: $CI_PROJECT_ID # The ID of the current project. This ID is unique across all projects on the GitLab instance.
    UPSTREAM_PROJECT_NAME: $CI_PROJECT_NAME # "dd-trace-java"
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME # The branch or tag name for which project is built.
    UPSTREAM_COMMIT_SHA: $CI_COMMIT_SHA # The commit revision the project is built for.
    FF_USE_LEGACY_KUBERNETES_EXECUTION_STRATEGY: "true"
