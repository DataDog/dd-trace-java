package com.datadog.iast.model;

import datadog.trace.bootstrap.instrumentation.api.AgentSpan;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

public final class Vulnerability {

  private final @Nonnull VulnerabilityType type;

  private final @Nonnull Location location;

  private final @Nullable Evidence evidence;

  private long hash;

  public Vulnerability(
      final VulnerabilityType type, final Location location, final Evidence evidence) {
    this.type = type;
    this.location = location;
    this.evidence = evidence;
    this.hash = type.calculateHash(this);
  }

  public VulnerabilityType getType() {
    return type;
  }

  public Location getLocation() {
    return location;
  }

  public Evidence getEvidence() {
    return evidence;
  }

  public long getHash() {
    return hash;
  }

  public void updateSpan(final AgentSpan newSpan) {
    if (newSpan != null) {
      location.updateSpan(newSpan);
      if (type instanceof VulnerabilityType.HeaderVulnerabilityType) {
        hash = type.calculateHash(this);
      }
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vulnerability that = (Vulnerability) o;
    return hash == that.hash;
  }

  @Override
  public int hashCode() {
    return ((Long) hash).hashCode();
  }
}
