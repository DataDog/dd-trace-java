package com.datadog.iast.model;

import datadog.trace.bootstrap.instrumentation.api.AgentSpan;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

public final class Vulnerability {

  private final @Nonnull VulnerabilityType type;

  private final @Nonnull Location location;

  private final @Nullable Evidence evidence;

  private @Nullable String stackId;

  private long hash;

  public Vulnerability(@Nonnull final VulnerabilityType type, @Nonnull final Location location) {
    this(type, location, null);
  }

  public Vulnerability(
      @Nonnull final VulnerabilityType type,
      @Nonnull final Location location,
      @Nullable final Evidence evidence) {
    this.type = type;
    this.location = location;
    this.evidence = evidence;
    this.hash = type.calculateHash(this);
  }

  @Nonnull
  public VulnerabilityType getType() {
    return type;
  }

  @Nonnull
  public Location getLocation() {
    return location;
  }

  @Nullable
  public Evidence getEvidence() {
    return evidence;
  }

  @Nullable
  public String getStackId() {
    return stackId;
  }

  public void setStackId(@Nullable String stackId) {
    this.stackId = stackId;
  }

  public long getHash() {
    return hash;
  }

  public void updateSpan(final AgentSpan newSpan) {
    if (newSpan != null) {
      location.updateSpan(newSpan);
      hash = type.calculateHash(this);
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vulnerability that = (Vulnerability) o;
    return hash == that.hash;
  }

  @Override
  public int hashCode() {
    return ((Long) hash).hashCode();
  }
}
