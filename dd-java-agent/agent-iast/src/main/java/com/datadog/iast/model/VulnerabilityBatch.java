package com.datadog.iast.model;

import com.datadog.iast.model.json.VulnerabilityEncoding;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.Nullable;

/** Collects vulnerabilities and serializes to JSON lazily on {@link #toString()}. */
public final class VulnerabilityBatch {

  @Nullable private List<Vulnerability> vulnerabilities;
  @Nullable private volatile String json;

  public void add(final Vulnerability v) {
    synchronized (this) {
      json = null;
      if (vulnerabilities == null) {
        this.vulnerabilities = new ArrayList<>();
      }
      vulnerabilities.add(v);
    }
  }

  /** Internal list of vulnerabilities. Not thread-safe. */
  @Nullable
  public List<Vulnerability> getVulnerabilities() {
    return vulnerabilities;
  }

  @Override
  public String toString() {
    String currentJson = json;
    if (currentJson != null) {
      return currentJson;
    }
    synchronized (this) {
      if (json == null) {
        json = VulnerabilityEncoding.toJson(this);
      }
      return json;
    }
  }
}
