package com.datadog.iast.model

import datadog.trace.api.DDId
import datadog.trace.test.util.DDSpecification

import static com.datadog.iast.model.VulnerabilityType.WEAK_CIPHER

class VulnerabilityTypeTest extends DDSpecification {

  def 'test compute hash'(final VulnerabilityType type, final Location location, final Evidence evidence, final long expected) {
    when:
    final vulnerability = new Vulnerability(type, location, evidence)
    then:
    vulnerability.hash == expected

    where:
    type        | location                                                                         | evidence            | expected
    WEAK_CIPHER | Location.forSpanAndStack(DDId.from(123), new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("MD5") | 1045110372
    WEAK_CIPHER | Location.forSpanAndStack(DDId.from(456), new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("MD4") | 1045110372
    WEAK_CIPHER | Location.forSpanAndStack(DDId.from(789), new StackTraceElement("foo", "foo", "foo", 1)) | null                | 1045110372
    WEAK_CIPHER | null                                                                             | new Evidence("MD5") | 1272119222
    WEAK_CIPHER | null                                                                             | new Evidence("MD4") | 1272119222
    WEAK_CIPHER | null                                                                             | null                | 1272119222
  }
}
