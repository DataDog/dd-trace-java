package com.datadog.iast.model

import datadog.trace.test.util.DDSpecification

import static com.datadog.iast.model.VulnerabilityType.INSECURE_COOKIE
import static com.datadog.iast.model.VulnerabilityType.NO_HTTPONLY_COOKIE
import static com.datadog.iast.model.VulnerabilityType.NO_SAMESITE_COOKIE
import static com.datadog.iast.model.VulnerabilityType.WEAK_CIPHER
import static com.datadog.iast.model.VulnerabilityType.XCONTENTTYPE_HEADER_MISSING
import static com.datadog.iast.model.VulnerabilityType.HSTS_HEADER_MISSING

class VulnerabilityTypeTest extends DDSpecification {

  void 'test compute hash'() {
    when:
    final vulnerability = serviceName != null? new Vulnerability(type, serviceName) : new Vulnerability(type, location, evidence)

    then:
    vulnerability.hash == expected

    where:
    type        | location                                                                     | evidence            | serviceName |expected
    WEAK_CIPHER | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("MD5") | null | 1045110372
    WEAK_CIPHER | Location.forSpanAndStack(456, new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("MD4") | null |1045110372
    WEAK_CIPHER | Location.forSpanAndStack(789, new StackTraceElement("foo", "foo", "foo", 1)) | null                | null |1045110372
    WEAK_CIPHER | Location.forSpanAndClassAndMethod(123, "foo", "foo")                         | new Evidence("MD5") | null |3265519776
    WEAK_CIPHER | Location.forSpanAndClassAndMethod(456, "foo", "foo")                         | new Evidence("MD4") | null |3265519776
    WEAK_CIPHER | Location.forSpanAndClassAndMethod(789, "foo", "foo")                         | null                | null |3265519776
    WEAK_CIPHER | null                                                                         | new Evidence("MD5") | null |1272119222
    WEAK_CIPHER | null                                                                         | new Evidence("MD4") | null |1272119222
    WEAK_CIPHER | null                                                                         | null                | null |1272119222
    INSECURE_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | null | null |3471934557
    INSECURE_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("cookieName1") | null |360083726
    INSECURE_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("cookieName2") | null |2357141684
    NO_HTTPONLY_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | null| null |2115643285
    NO_HTTPONLY_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("cookieName1") | null |585548920
    NO_HTTPONLY_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("cookieName2") | null |3153040834
    NO_SAMESITE_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | null |null | 3683185539
    NO_SAMESITE_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("cookieName1") |null | 881944211
    NO_SAMESITE_COOKIE | Location.forSpanAndStack(123, new StackTraceElement("foo", "foo", "foo", 1)) | new Evidence("cookieName2") | null |2912433961
    XCONTENTTYPE_HEADER_MISSING | null | null |null | 3429203725
    XCONTENTTYPE_HEADER_MISSING | null | null | 'serviceName1' | 2718833340
    XCONTENTTYPE_HEADER_MISSING | null | null | 'serviceName2' | 990333702
    HSTS_HEADER_MISSING | null | null | null | 121310697
    HSTS_HEADER_MISSING | null | null | 'serviceName1' | 3533496951
    HSTS_HEADER_MISSING | null | null | 'serviceName2' | 1268102093
  }
}
