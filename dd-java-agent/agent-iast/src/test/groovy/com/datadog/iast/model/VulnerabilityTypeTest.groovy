package com.datadog.iast.model

import datadog.trace.bootstrap.instrumentation.api.AgentSpan
import datadog.trace.test.util.DDSpecification

import static com.datadog.iast.model.VulnerabilityType.INSECURE_COOKIE
import static com.datadog.iast.model.VulnerabilityType.NO_HTTPONLY_COOKIE
import static com.datadog.iast.model.VulnerabilityType.NO_SAMESITE_COOKIE
import static com.datadog.iast.model.VulnerabilityType.WEAK_CIPHER
import static com.datadog.iast.model.VulnerabilityType.XCONTENTTYPE_HEADER_MISSING
import static com.datadog.iast.model.VulnerabilityType.HSTS_HEADER_MISSING

class VulnerabilityTypeTest extends DDSpecification {

  void 'test compute hash'() {
    when:
    final vulnerability = new Vulnerability(type, location, evidence)

    then:
    vulnerability.hash == expected

    where:
    type                        | location                              | evidence                    | expected
    WEAK_CIPHER                 | getSpanAndStackLocation(123)          | new Evidence("MD5")         | 1045110372
    WEAK_CIPHER                 | getSpanAndStackLocation(456)          | new Evidence("MD4")         | 1045110372
    WEAK_CIPHER                 | getSpanAndStackLocation(789)          | null                        | 1045110372
    WEAK_CIPHER                 | getSpanAndClassAndMethodLocation(123) | new Evidence("MD5")         | 3265519776
    WEAK_CIPHER                 | getSpanAndClassAndMethodLocation(456) | new Evidence("MD4")         | 3265519776
    WEAK_CIPHER                 | getSpanAndClassAndMethodLocation(789) | null                        | 3265519776
    INSECURE_COOKIE             | getSpanAndStackLocation(123)          | null                        | 3471934557
    INSECURE_COOKIE             | getSpanAndStackLocation(123)          | new Evidence("cookieName1") | 360083726
    INSECURE_COOKIE             | getSpanAndStackLocation(123)          | new Evidence("cookieName2") | 2357141684
    NO_HTTPONLY_COOKIE          | getSpanAndStackLocation(123)          | null                        | 2115643285
    NO_HTTPONLY_COOKIE          | getSpanAndStackLocation(123)          | new Evidence("cookieName1") | 585548920
    NO_HTTPONLY_COOKIE          | getSpanAndStackLocation(123)          | new Evidence("cookieName2") | 3153040834
    NO_SAMESITE_COOKIE          | getSpanAndStackLocation(123)          | null                        | 3683185539
    NO_SAMESITE_COOKIE          | getSpanAndStackLocation(123)          | new Evidence("cookieName1") | 881944211
    NO_SAMESITE_COOKIE          | getSpanAndStackLocation(123)          | new Evidence("cookieName2") | 2912433961
    XCONTENTTYPE_HEADER_MISSING | getSpanLocation(123, null)            | null                        | 3429203725
    XCONTENTTYPE_HEADER_MISSING | getSpanLocation(123, 'serviceName1')  | null                        | 2718833340
    XCONTENTTYPE_HEADER_MISSING | getSpanLocation(123, 'serviceName2')  | null                        | 990333702
    HSTS_HEADER_MISSING         | getSpanLocation(123, null)            | null                        | 121310697
    HSTS_HEADER_MISSING         | getSpanLocation(123, 'serviceName1')  | null                        | 3533496951
    HSTS_HEADER_MISSING         | getSpanLocation(123, 'serviceName2')  | null                        | 1268102093
  }

  private Location getSpanAndStackLocation(final long spanId) {
    final span = Stub(AgentSpan)
    span.getSpanId() >> spanId
    return Location.forSpanAndStack(span, new StackTraceElement("foo", "foo", "foo", 1))
  }

  private Location getSpanAndClassAndMethodLocation(final long spanId) {
    final span = Stub(AgentSpan)
    span.getSpanId() >> spanId
    return Location.forSpanAndClassAndMethod(span, "foo", "foo")
  }

  private Location getSpanLocation(final long spanId, final String serviceName) {
    final span = Stub(AgentSpan)
    span.getSpanId() >> spanId
    span.getServiceName() >> serviceName
    return Location.forSpan(span)
  }
}
