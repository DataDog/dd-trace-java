plugins {
  id 'com.gradleup.shadow'
}

ext {
  // need access to sun.misc package
  skipSettingCompilerRelease = true
}

apply from: "$rootDir/gradle/java.gradle"

minimumBranchCoverage = 0.5
minimumInstructionCoverage = 0.5
excludedClassesCoverage += [
  'datadog.trace.agent.test.asserts.*Assert',
  'datadog.trace.agent.test.asserts.*Assert.*',
  'datadog.trace.agent.test.base.*',
  'datadog.trace.agent.test.log.*',
  // Util class used in TestFrameworkTest
  'datadog.trace.agent.test.civisibility.coverage.NoopCoverageProbeStore',
  'datadog.trace.agent.test.civisibility.coverage.NoopCoverageProbeStore.NoopCoverageProbeStoreFactory',
  // Groovy generates unreachable lines see:
  // https://issues.apache.org/jira/browse/GROOVY-9610
  'datadog.trace.agent.test.AgentTestRunner',
  'datadog.trace.agent.test.AbortTransformationException',
  'datadog.trace.agent.test.naming.VersionedNamingTestBase',
  'datadog.trace.agent.test.server.http.HttpProxy.AsyncPipe',
  'datadog.trace.agent.test.server.http.TestHttpServer.*',
  'datadog.trace.agent.test.utils.*',
  // Avoid applying jacoco instrumentation to classes instrumented by tested agent
  'context.FieldInjectionTestInstrumentation**',
  'context.ExcludeFilterTestInstrumentation**',
  'datadog.trace.agent.test.AgentTestRunner**',
  'datadog.trace.agent.test.checkpoints.**',
  'datadog.trace.agent.test.datastreams.**',
  // profiling
  'datadog.trace.agent.test.TestProfilingContextIntegration',
  'datadog.trace.agent.test.TestProfilingContextIntegration.TestQueueTiming'
]

configurations.api {
  exclude group: 'org.snakeyaml', module: 'snakeyaml-engine' // we vendor this in the agent jar
}

dependencies {
  api libs.bytebuddy
  api libs.bytebuddyagent
  api libs.slf4j
  api libs.bundles.spock
  api libs.bundles.test.logging
  api libs.guava

  api group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.56.v20240826'
  // ^ 9.4 last to support java 8
  api group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: libs.versions.okhttp.legacy.get()

  api project(':dd-java-agent:agent-tooling')
  api project(':dd-java-agent:agent-builder')
  api project(':utils:test-utils')
  api project(':utils:time-utils')

  api libs.groovy

  implementation 'org.junit.platform:junit-platform-runner:1.9.0'
  implementation project(':dd-java-agent:appsec')
}

shadowJar {
  dependencies {
    include(dependency {
      it.moduleGroup == 'org.eclipse.jetty'
    })
  }
  relocate "org.eclipse.jetty", "datadog.eclipse.jetty"
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
}
