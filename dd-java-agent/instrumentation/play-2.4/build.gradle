ext {
  // Play doesn't work with Java 9+ until 2.6.12
  maxJavaVersionForTests = JavaVersion.VERSION_1_8
}

muzzle {
  pass {
    name = "play24and25"
    group = 'com.typesafe.play'
    module = 'play_2.11'
    versions = '[2.4.0,2.6)'
    assertInverse = true
  }
  pass {
    name = "play25only"
    group = 'com.typesafe.play'
    module = 'play_2.11'
    versions = '[2.5.0,2.6)'
    assertInverse = true
  }
  fail {
    name = "play24and25"
    group = 'com.typesafe.play'
    module = 'play_2.12'
    versions = '[,]'
  }
  fail {
    name = "play24and25"
    group = 'com.typesafe.play'
    module = 'play_2.13'
    versions = '[,]'
  }
}

apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'scala'

repositories {
  maven {
    // for muzzle because of play-2.3
    // only place that has 'com.typesafe.netty:netty-http-pipelining:1.1.2' publicly accessible
    name 'typesafe'
    url 'https://repo.typesafe.com/typesafe/maven-releases/'
  }
}

tasks.withType(org.gradle.api.tasks.scala.ScalaCompile) {
  it.javaLauncher = getJavaLauncherFor(8)
}

addTestSuiteForDir('latestDepTest', 'test')

sourceSets {
  main_play25 {
    java.srcDirs "${project.projectDir}/src/main/java_play25"
  }
}
jar {
  from sourceSets.main_play25.output
}
project.afterEvaluate { p ->
  instrumentJava.dependsOn compileMain_play25Java
  forbiddenApisMain_play25.dependsOn instrumentMain_play25Java
}
instrument {
  additionalClasspath = [
    instrumentJava: compileMain_play25Java.destinationDirectory
  ]
}

dependencies {
  compileOnly group: 'com.typesafe.play', name: 'play_2.11', version: '2.4.0'
  main_play25CompileOnly group: 'com.typesafe.play', name: 'play_2.11', version: '2.5.0'
  main_play25CompileOnly project(':internal-api')
  main_play25CompileOnly project(':dd-java-agent:agent-tooling')
  main_play25CompileOnly project(':dd-java-agent:agent-bootstrap')

  testRuntimeOnly project(':dd-java-agent:instrumentation:netty-4.0')
  testRuntimeOnly project(':dd-java-agent:instrumentation:netty-4.1')
  testRuntimeOnly project(':dd-java-agent:instrumentation:akka-http-10.0')
  testRuntimeOnly project(':dd-java-agent:instrumentation:akka-concurrent')
  testRuntimeOnly project(':dd-java-agent:instrumentation:akka-init')
  testRuntimeOnly project(':dd-java-agent:instrumentation:scala-concurrent')
  testRuntimeOnly project(':dd-java-agent:instrumentation:scala-promise:scala-promise-2.10')
  testRuntimeOnly project(':dd-java-agent:instrumentation:scala-promise:scala-promise-2.13')

  // Before 2.5, play used netty 3.x which isn't supported, so for better test consistency, we test with just 2.5
  testImplementation group: 'com.typesafe.play', name: 'play-java_2.11', version: '2.5.0'
  testImplementation group: 'com.typesafe.play', name: 'play-java-ws_2.11', version: '2.5.0'
  testImplementation(group: 'com.typesafe.play', name: 'play-test_2.11', version: '2.5.0') {
    exclude group: 'org.eclipse.jetty.websocket', module: 'websocket-client'
  }
  testRuntimeOnly sourceSets.main_play25.output

  latestDepTestImplementation group: 'com.typesafe.play', name: 'play-java_2.11', version: '2.5.+'
  latestDepTestImplementation group: 'com.typesafe.play', name: 'play-java-ws_2.11', version: '2.5.+'
  latestDepTestImplementation(group: 'com.typesafe.play', name: 'play-test_2.11', version: '2.5.+') {
    exclude group: 'org.eclipse.jetty.websocket', module: 'websocket-client'
  }
}
compileTestGroovy {
  classpath = classpath + files(compileTestScala.destinationDirectory)
  dependsOn 'compileTestScala'
}
compileLatestDepTestGroovy {
  classpath = classpath + files(compileLatestDepTestScala.destinationDirectory)
  dependsOn 'compileLatestDepTestScala'
}

sourceSets {
  routeGenerator {
    scala {
      srcDir "${project.projectDir}/src/routeGenerator/scala"
    }
  }
  testGenerated {
    scala {
      srcDir layout.buildDirectory.dir('generated/sources/testRoutes/scala')
    }
  }
  latestDepTestGenerated {
    scala {
      srcDir layout.buildDirectory.dir('generated/sources/latestDepTestRoutes/scala')
    }
  }
}
dependencies {
  routeGeneratorImplementation deps.scala211
  routeGeneratorImplementation group: 'com.typesafe.play', name: "routes-compiler_2.11", version: '2.5.0'
}
configurations {
  testGeneratedCompileClasspath.extendsFrom testCompileClasspath
  latestDepTestGeneratedCompileClasspath.extendsFrom latestDepTestCompileClasspath
}

['buildTestRoutes', 'buildLatestDepTestRoutes'].each { taskName ->
  tasks.register(taskName, JavaExec) {
    String routesFile = "${project.projectDir}/src/test/routes/conf/routes"
    def subdir = taskName == 'buildTestRoutes' ? 'testRoutes' : 'latestDepTestRoutes'
    def outputDir =
      layout.buildDirectory.dir("generated/sources/$subdir/scala")

    it.inputs.file routesFile
    it.outputs.dir outputDir

    it.mainClass.set 'generator.CompileRoutes'
    it.args routesFile, outputDir.get().asFile.absolutePath

    it.classpath configurations.routeGeneratorRuntimeClasspath
    it.classpath compileRouteGeneratorScala.destinationDirectory

    if (taskName == 'buildTestRoutes') {
      it.classpath compileTestScala.destinationDirectory
      dependsOn compileTestScala
    } else {
      it.classpath compileLatestDepTestScala.destinationDirectory
      dependsOn compileLatestDepTestScala
    }

    dependsOn compileRouteGeneratorScala
  }
}
compileTestGeneratedScala {
  classpath = classpath + files(compileTestScala.destinationDirectory)
  dependsOn buildTestRoutes, compileLatestDepTestScala
}
compileLatestDepTestGeneratedScala {
  classpath = classpath + files(compileLatestDepTestScala.destinationDirectory)
  dependsOn buildLatestDepTestRoutes, compileLatestDepTestScala
}
compileTestGroovy {
  classpath = classpath +
    files(compileTestGeneratedScala.destinationDirectory)
  dependsOn 'compileTestGeneratedScala'
}
compileLatestDepTestGroovy {
  classpath = classpath +
    files(compileLatestDepTestGeneratedScala.destinationDirectory)
  dependsOn 'compileLatestDepTestGeneratedScala'
}
// do it this way rather than through dependencies {} because
// latestDepTestImplementation extends testImplementation
test {
  classpath = classpath + files(compileTestGeneratedScala.destinationDirectory)
}
latestDepTest {
  classpath = classpath + files(compileLatestDepTestGeneratedScala.destinationDirectory)
}

forbiddenApisTestGenerated {
  enabled = false
}
forbiddenApisLatestDepTestGenerated {
  enabled = false
}
