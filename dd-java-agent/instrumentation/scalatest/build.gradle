apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'scala'

muzzle {
  pass {
    group = 'org.scalatest'
    module = 'scalatest_2.12'
    versions = '[3.0.8,)'
    extraDependency 'org.scala-lang:scala-library:2.12.15'
  }
}

addTestSuiteForDir('latestDepTest', 'test')

dependencies {
  compileOnly group: 'org.scalatest', name: 'scalatest_2.13', version: '3.0.8'

  testImplementation project(':dd-java-agent:agent-ci-visibility:civisibility-instrumentation-test-fixtures')

  testImplementation group: 'org.scala-lang', name: 'scala-library', version: '2.12.15'
  testImplementation group: 'org.scalatest', name: 'scalatest_2.12', version: '3.1.0'

  latestDepTestImplementation group: 'org.scalatest', name: 'scalatest_2.12', version: '+'
}

tasks.named("compileTestGroovy") {
  dependsOn compileTestScala
  classpath += files(sourceSets.test.scala.destinationDirectory)
}

tasks.named("compileLatestDepTestGroovy") {
  dependsOn compileLatestDepTestScala
  classpath += files(sourceSets.latestDepTest.scala.destinationDirectory)
}

tasks.withType(ScalaCompile).configureEach {
  // Despite the compatibility matrix, scala compiler doesn't properly
  // get the right compiler flags with JDK11 toolchain. Using 8 works.
  // * https://docs.scala-lang.org/overviews/jdk-compatibility/overview.html
  // * https://github.com/gradle/gradle/issues/19456
  configureCompiler(it, 8)
}

configurations.configureEach {
  resolutionStrategy.componentSelection.all { ComponentSelection selection ->
    def version = selection.candidate.version.toLowerCase()
    if (version.contains('alpha') || version.contains('beta')) {
      reject("Early Access Version: ${selection.candidate.version}")
    }
  }
}
