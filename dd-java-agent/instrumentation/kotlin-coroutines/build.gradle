muzzle {
  pass {
    group = 'org.jetbrains.kotlin'
    module = 'kotlin-stdlib'
    versions = "[1.3.72,)"
    extraDependency "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0"
  }
  pass {
    group = 'org.jetbrains.kotlinx'
    module = 'kotlinx-coroutines-core'
    versions = "[1.3.0,1.3.8)"
    extraDependency "org.jetbrains.kotlin:kotlin-stdlib:1.3.72"
  }
  // for 1.3.9 - 1.4.3 muzzle fails to choose the variant
  pass {
    group = 'org.jetbrains.kotlinx'
    module = 'kotlinx-coroutines-core-jvm'
    versions = "[1.5.0,)"
    extraDependency "org.jetbrains.kotlin:kotlin-stdlib:1.3.72"
  }
}

apply from: "$rootDir/gradle/java.gradle"
apply from: "$rootDir/gradle/test-with-kotlin.gradle"

// Having Groovy, Kotlin and Java in the same project is a bit problematic
// this removes Kotlin from main source set to avoid compilation issues
sourceSets {
  main {
    kotlin {
      srcDirs = []
    }
    java {
      srcDirs = ["src/main/java"]
    }
  }
}

// this creates Kotlin dirs to make JavaCompile tasks work
def createKotlinDirs = tasks.register("createKotlinDirs") {
  def dirsToCreate = ["classes/kotlin/main"]
  doFirst {
    dirsToCreate.forEach {
      new File(project.buildDir, it).mkdirs()
    }
  }

  outputs.dirs(
    dirsToCreate.collect {
      project.layout.buildDirectory.dir(it)
    }
    )
}

tasks.withType(JavaCompile).configureEach {
  inputs.files(createKotlinDirs)
}

dependencies {
  implementation project(':dd-java-agent:instrumentation:java-concurrent')
  compileOnly deps.kotlin
  compileOnly deps.coroutines

  testImplementation deps.kotlin
  testImplementation deps.coroutines
  testImplementation project(':dd-trace-api')
  testImplementation project(':dd-java-agent:instrumentation:trace-annotation')
}
