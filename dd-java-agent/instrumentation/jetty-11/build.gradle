ext {
  minJavaVersionForTests = JavaVersion.VERSION_11
}

muzzle {
  pass {
    group = "org.eclipse.jetty"
    module = 'jetty-server'
    versions = "[11,12)"
  }
}

apply from: "$rootDir/gradle/java.gradle"
apply plugin: "idea"

// TODO latestDepTest only works on Java8 for now
//apply plugin: 'org.unbroken-dome.test-sets'
//
//testSets {
//  latestDepTest {
//    dirName = 'test'
//  }
//}

sourceSets {
  "main_java11" {
    java.srcDirs "${project.projectDir}/src/main/java11"
  }
}

[compileMain_java11Java, compileTestJava].each {
  it.configure {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    setJavaVersion(it, 11)
  }
}

compileTestGroovy {
  javaLauncher = getJavaLauncherFor(11)
}

dependencies {
  main_java11CompileOnly ("org.eclipse.jetty:jetty-server:11.0.0") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }
  main_java11Implementation project(':dd-java-agent:instrumentation:jetty-common')
  implementation project(':dd-java-agent:instrumentation:jetty-common')

  // Don't want to conflict with jetty from the test server.
  testImplementation(project(':dd-java-agent:testing')) {
    exclude group: 'org.eclipse.jetty', module: 'jetty-server'
  }
  testImplementation ("org.eclipse.jetty:jetty-server:11.0.0") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }
  testImplementation ("org.eclipse.jetty:jetty-servlet:11.0.0") {
    exclude group: 'org.slf4j', module: 'slf4j-api'
  }
  testImplementation(project(':dd-java-agent:instrumentation:jetty-appsec-9.3'))

  //latestDepTestImplementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '11.+'
}

jar {
  from sourceSets.main_java11.output
}

idea {
  module {
    jdkName = '11'
  }
}
