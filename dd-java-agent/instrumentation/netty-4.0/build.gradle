// Set properties before any plugins get loaded
// asynchttpclient is not compatible with Java 11
ext {
  maxJavaVersionForTests = JavaVersion.VERSION_1_8
}

apply from: "$rootDir/gradle/java.gradle"

muzzle {
  pass {
    group = "io.netty"
    module = "netty-codec-http"
    versions = "[4.0.0.Final,4.1.0.Final)"
    assertInverse = true
  }
  pass {
    group = "io.netty"
    module = "netty-all"
    versions = "[4.0.0.Final,4.1.0.Final)"
    assertInverse = true
    excludeDependency 'io.netty:netty-tcnative'
  }
  fail {
    group = "io.netty"
    module = "netty"
    versions = "[,]"
  }
  pass {
    group = "io.vertx"
    module = "vertx-core"
    versions = "[2.0.0,3.3.0)"
    assertInverse = true
  }
}

addTestSuiteForDir('latestDepTest', 'test')

dependencies {
  compileOnly group: 'io.netty', name: 'netty-codec-http', version: '4.0.0.Final'

  testImplementation project(':dd-java-agent:instrumentation:netty-promise-4')
  testImplementation group: 'io.netty', name: 'netty-codec-http', version: '4.0.0.Final'
  testImplementation group: 'org.asynchttpclient', name: 'async-http-client', version: '2.0.0'

  latestDepTestImplementation group: 'io.netty', name: 'netty-codec-http', version: '4.0.56.Final'
  latestDepTestImplementation group: 'org.asynchttpclient', name: 'async-http-client', version: '2.0.+'
}

// We need to force the dependency to the earliest supported version because other libraries declare newer versions.
configurations.testImplementation {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      //specifying a fixed version for all libraries with io.netty' group
      if (details.requested.group == 'io.netty') {
        details.useVersion "4.0.0.Final"
      }
    }
  }
}
