apply from: "$rootDir/gradle/java.gradle"

def spockGroovyVersion = '3.0'

muzzle {
  pass {
    group = 'org.spockframework'
    module = 'spock-core'
    versions = "[2.0-groovy-${spockGroovyVersion},)"
    extraDependency "org.junit.platform:junit-platform-launcher:1.12.0"
  }
}

addTestSuiteForDir('latestDepTest', 'test')

dependencies {
  testImplementation 'org.codehaus.groovy:groovy-all:3.0.24'
  implementation project(':dd-java-agent:instrumentation:junit:junit-5.3')

  compileOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.7.2'
  compileOnly group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'
  compileOnly group: 'org.spockframework', name: 'spock-core', version: "2.0-groovy-${spockGroovyVersion}"

  testImplementation project(':dd-java-agent:agent-ci-visibility:civisibility-instrumentation-test-fixtures')

  testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: libs.versions.junit.platform.get()
  testImplementation group: 'org.spockframework', name: 'spock-core', version: "2.2-groovy-${spockGroovyVersion}"

  latestDepTestImplementation group: 'org.spockframework', name: 'spock-core', version: '2.+'
}

configurations {
  testImplementation {
    exclude group: 'org.apache.groovy'
  }
}

configurations.matching({ it.name.startsWith('test') }).configureEach({
  it.resolutionStrategy {
    force group: 'org.junit.platform', name: 'junit-platform-launcher', version: libs.versions.junit.platform.get()
    force group: 'org.spockframework', name: 'spock-core', version: "2.2-groovy-${spockGroovyVersion}"
  }
})

configurations.matching({ it.name.startsWith('latestDepTest') }).configureEach({
  it.resolutionStrategy.componentSelection.all { ComponentSelection selection ->
    if (selection.candidate.group == 'org.spockframework' && selection.candidate.module == 'spock-core' && !selection.candidate.version.endsWith("-groovy-${spockGroovyVersion}")) {
      selection.reject('Spock groovy version mismatch')
    }
  }
})
