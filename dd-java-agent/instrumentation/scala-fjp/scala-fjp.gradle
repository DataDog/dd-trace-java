ext {
  minJavaVersionForTests = JavaVersion.VERSION_1_8
}

muzzle {
  pass {
    group = 'org.scala-lang'
    module = "scala-library"
    versions = "[2.8,2.11)"
    assertInverse = true
  }
}

apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'scala' // Don't use test-with-scala since we want to pick our own version.

apply plugin: 'org.unbroken-dome.test-sets'

/**
 * This project has instrumentation to support Scala's copy of ForkJoinPool which was added in 2.8 and removed in 2.11.
 */
testSets {
  latest11Test {
    dirName = 'test'
  }
}

compileTestGroovy {
  classpath += files(sourceSets.test.scala.classesDirectory)
}
compileLatest11TestGroovy {
  classpath += files(sourceSets.latest11Test.scala.classesDirectory)
}

dependencies {
  compileOnly group: 'org.scala-lang', name: 'scala-library', version: '2.8.0'

  // first version that works with the tests (without dependency problems):
  testCompile group: 'org.scala-lang', name: 'scala-library', version: '2.10.2'
  testCompile project(':dd-java-agent:instrumentation:trace-annotation')
  testCompile project(':dd-java-agent:instrumentation:scala-concurrent')
  testCompile project(':dd-java-agent:instrumentation:scala-promise-2.10')

  latest11TestCompile group: 'org.scala-lang', name: 'scala-library', version: '2.11.+'
  latest11TestCompile project(':dd-java-agent:instrumentation:scala-concurrent')
  latest11TestCompile project(':dd-java-agent:instrumentation:scala-promise-2.10')
}

// Run extra tests along with the rest of unit tests
test.dependsOn latest11Test
