apply from: "$rootDir/gradle/java.gradle"

muzzle {
  extraRepository("gradle-libs-releases-local", "https://repo.gradle.org/artifactory/libs-releases-local")

  pass {
    group = 'org.gradle'
    module = 'gradle-core'
    versions = '[1.0,4.2)'
  }
  pass {
    group = 'org.gradle'
    module = 'gradle-core'
    versions = '[4.2,)'
    // starting with versions 4.2 some of the classes were moved into core-api artifact,
    // but core-api is only available for versions 5.6 and later
    extraDependency 'org.gradle:gradle-core-api:5.6'
  }
  // gradle jars are published only up to version 6.1.1,
  // anything that comes later is not covered by muzzle
}

repositories {
  maven {
    url "https://repo.gradle.org/artifactory/libs-releases-local"
  }
}

configurations.testRuntimeClasspath {
  // Both gradle-logging and logback-classic contain SLF4J bindings.
  // If multiple bindings are on the classpath, a random one is chosen.
  // This breaks Gradle test kit, as it does some explicit casting,
  // expecting SLF4J factory to return an instance of org.gradle.api.logging.Logger
  exclude group: 'ch.qos.logback', module: 'logback-classic'
}

dependencies {
  compileOnly 'org.gradle:gradle-core:1.0'
  compileOnly 'org.codehaus.groovy:groovy:2.5.21'

  // The tracer uses Spock 1.3 and Groovy 2.5.21.
  // Gradle 7.5's gradleTestKit() depends on Groovy 3.0.10,
  // so in order to avoid the conflict the tests in this module
  // are forced to use an older test kit version
  testImplementation 'commons-io:commons-io:2.9.0'

  def gradleTestKitVersion = '5.6'
  testImplementation "org.gradle:gradle-core:$gradleTestKitVersion"
  testImplementation "org.gradle:gradle-core-api:$gradleTestKitVersion"
  testImplementation(group: "org.gradle", name: "gradle-logging", version: "$gradleTestKitVersion") {
    exclude group: 'org.slf4j'
  }
  testImplementation "org.gradle:gradle-tooling-api:$gradleTestKitVersion"
  testImplementation "org.gradle:gradle-test-kit:$gradleTestKitVersion"
}

// FIXME do not commit! This does not work since SpockRunner extends Sputnik, which is no longer there in Spock 2.0
//dependencies {
//  compileOnly 'org.gradle:gradle-core:1.0'
//  compileOnly 'org.codehaus.groovy:groovy:2.5.21'
//
//  testImplementation "org.codehaus.groovy:groovy-all:3.0.10"
//  testImplementation "org.spockframework:spock-core:2.0-groovy-3.0"
//  testImplementation gradleTestKit()
//}
