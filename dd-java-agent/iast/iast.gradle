plugins {
  id "com.github.johnrengelman.shadow"
}

apply from: "$rootDir/gradle/tries.gradle"
apply from: "$rootDir/gradle/java.gradle"
apply from: "$rootDir/gradle/version.gradle"

dependencies {
  api deps.slf4j
  implementation project(':internal-api')
  implementation project(':internal-api:internal-api-8')
  implementation project(':internal-api:internal-api-9')
  implementation group: 'com.squareup.moshi', name: 'moshi', version: versions.moshi

  testImplementation deps.bytebuddy
  testImplementation project(':utils:test-utils')
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

shadowJar {
  dependencies deps.excludeShared
}

jar {
  archiveClassifier = 'unbundled'
}

ext {
  minimumBranchCoverage = 0.6
  minimumInstructionCoverage = 0.8
  excludedClassesCoverage = [
    // Avoid coverage measurement of model getters atm
    'com.datadog.iast.model.Evidence',
    'com.datadog.iast.model.Range',
    'com.datadog.iast.model.Source',
    'com.datadog.iast.model.Vulnerability',
    // Small JsonAdapters with unimplemented fromJson
    'com.datadog.iast.model.json.SourceTypeAdapter',
  ]
  excludedClassesBranchCoverage = []
  excludedClassesInstructionCoverage = []
  minJavaVersionForTests = JavaVersion.VERSION_1_8
}

compileJava.dependsOn 'generateClassNameTries'
packageSources.dependsOn 'generateClassNameTries'
sourcesJar.dependsOn 'generateClassNameTries'

tasks.withType(Test).configureEach {
  jvmArgs += ['-Ddd.iast.enabled=true']
}

spotless {
  java {
    target 'src/**/*.java'
  }
}
