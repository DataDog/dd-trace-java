// The shadowJar of this project will be injected into the JVM's bootstrap classloader
plugins {
  id "com.github.johnrengelman.shadow"
}

apply from: "$rootDir/gradle/java.gradle"
apply plugin: "idea"

// FIXME: Improve test coverage.
minimumBranchCoverage = 0.0
minimumInstructionCoverage = 0.0

dependencies {
  compile project(':dd-java-agent:agent-logging')
  compile project(':dd-trace-api')
  compile project(':internal-api')
  implementation project(':internal-api:internal-api-8')
  compile deps.slf4j
  // ^ Generally a bad idea for libraries, but we're shadowing.

  testCompile project(':dd-java-agent:testing')
}

// Must use Java 11 to build JFR enabled code - there is no JFR in OpenJDK 8 (revisit once JFR in Java 8 is available)
sourceSets {
  "main_java11" {
    java.srcDirs "${project.projectDir}/src/main/java11"
  }
}
compileMain_java11Java.options.fork = true
compileMain_java11Java.options.forkOptions.javaHome = file(System.env.JAVA_11_HOME)
compileMain_java11Java.sourceCompatibility = JavaVersion.VERSION_1_8
compileMain_java11Java.targetCompatibility = JavaVersion.VERSION_1_8
dependencies {
  main_java11Compile project(':internal-api:internal-api-8')
  main_java11CompileOnly "org.projectlombok:lombok:${project.lombok.version}" transitive false
  main_java11AnnotationProcessor "org.projectlombok:lombok:${project.lombok.version}" transitive false
}
jar {
  from sourceSets.main_java11.output
}
idea {
  module {
    jdkName = '11'
  }
}
