plugins {
  id "com.github.johnrengelman.shadow"
}

ext {
  // Need to exclude OpenJ9 and Oracle JDK 8 since it doesn't support JFR fully
  excludeJdk = ['IBM8', 'ORACLE8']
  skipSettingCompilerRelease = true
}

apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'idea'

minimumBranchCoverage = 0.5
minimumInstructionCoverage = 0.7

excludedClassesCoverage += [
  // the config event is a simple data holder
  'com.datadog.profiling.auxiliary.async.AsyncProfilerConfigEvent',
  // mostly a wrapper around com.datadog.profiling.async.AsyncProfiler
  'com.datadog.profiling.auxiliary.async.AuxiliaryAsyncProfiler',
]

dependencies {
  implementation project(path: ':dd-java-agent:agent-profiling:profiling-async', configuration: 'shadow')
  api project(':dd-java-agent:agent-profiling:profiling-controller')
  api project(':dd-java-agent:agent-profiling:profiling-auxiliary')
  api project(':dd-java-agent:agent-profiling:profiling-utils')

  annotationProcessor deps.autoserviceProcessor
  compileOnly deps.autoserviceAnnotation

  implementation deps.slf4j

  testImplementation deps.jmc
  testImplementation deps.junit5
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

[JavaCompile, GroovyCompile].each {
  tasks.withType(it).configureEach {
    setJavaVersion(it, 11)
    // Disable '-processing' because some annotations are not claimed.
    // Disable '-options' because we are compiling for java8 without specifying bootstrap - intentionally.
    // Disable '-path' because we do not have some of the paths seem to be missing.
    options.compilerArgs.addAll(['-Xlint:all,-processing,-options,-path'/*, '-Werror'*/])
  }
}

forbiddenApisMain {
  failOnMissingClasses = false
}

idea {
  module {
    jdkName = '11'
  }
}
