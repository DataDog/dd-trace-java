plugins {
  id "com.github.johnrengelman.shadow"
}

ext {
}

apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'idea'

dependencies {
  // todo extract to libs, generate lockfile
  implementation 'co.elastic.otel:jvmti-access:0.5.0'
  implementation 'co.elastic.otel:universal-profiling-integration:0.5.0'
}

// Copied over in almost its entirety from ddprof module
shadowJar {
  archiveClassifier = ''
  include {
    def rslt = false
    rslt |= it.path == "com" || it.path == "com/datadog"
    || it.path.startsWith("com/datadog/") || it.path == "com/datadoghq" || it.path == "com/datadoghq/profiler"
    || it.path.startsWith("com/datadoghq/profiler")
    rslt |= it.path == "META-INF" || it.path == "META-INF/services" || it.path.startsWith("META-INF/services/") || it.path.startsWith("META-INF/native-libs/")
    rslt |= (it.path.contains("ddprof") && it.path.endsWith(".jar"))
    return rslt
  }
}

build.dependsOn shadowJar

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

[JavaCompile, GroovyCompile].each {
  tasks.withType(it).configureEach {
    setJavaVersion(it, 11)
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    // Disable '-processing' because some annotations are not claimed.
    // Disable '-options' because we are compiling for java8 without specifying bootstrap - intentionally.
    // Disable '-path' because we do not have some of the paths seem to be missing.
    options.compilerArgs.addAll(['-Xlint:all,-processing,-options,-path'/*, '-Werror'*/])
  }
}

forbiddenApisMain {
  failOnMissingClasses = false
}

idea {
  module {
    jdkName = '11'
  }
}
