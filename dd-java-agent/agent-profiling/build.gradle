plugins {
  id "com.github.johnrengelman.shadow"
}

apply from: "$rootDir/gradle/java.gradle"

excludedClassesCoverage += [
  'com.datadog.profiling.agent.CompositeController',
  'com.datadog.profiling.agent.CompositeController.CompositeRecordingData',
  'com.datadog.profiling.agent.CompositeController.CompositeOngoingRecording',
  'com.datadog.profiling.agent.ProfilingAgent',
  'com.datadog.profiling.agent.ProfilingAgent.ShutdownHook',
  'com.datadog.profiling.agent.ProfilingAgent.DataDumper'
]

dependencies {
  api libs.slf4j
  api project(':internal-api')

  implementation project(path: ':dd-java-agent:agent-profiling:profiling-ddprof', configuration: 'shadow')
  api project(':dd-java-agent:agent-profiling:profiling-uploader')
  api project(':dd-java-agent:agent-profiling:profiling-controller')
  api project(':dd-java-agent:agent-profiling:profiling-controller-jfr')
  api project(':dd-java-agent:agent-profiling:profiling-controller-jfr:implementation')
  api project(':dd-java-agent:agent-profiling:profiling-controller-ddprof')
  api project(':dd-java-agent:agent-profiling:profiling-controller-openjdk')
  api project(':dd-java-agent:agent-profiling:profiling-controller-oracle')

  testImplementation libs.bundles.junit5
  testImplementation libs.bundles.mockito
}

subprojects { Project subProj ->
  subProj.tasks.withType(Test).configureEach { subTask ->
    onlyIf { !project.rootProject.hasProperty("skipProfilingTests") }
  }
}

configurations {
  // exclude bootstrap dependencies from shadowJar
  runtime {
    exclude(group: 'org.slf4j', module: 'slf4j-api')
  }
}

shadowJar {
  dependencies deps.excludeShared
}

jar {
  archiveClassifier = 'unbundled'
}
