plugins {
  id "com.github.johnrengelman.shadow"
}

// Set properties before any plugins get loaded
ext {
  enableJunitPlatform = true
  minJavaVersionForTests = JavaVersion.VERSION_1_8
}

apply from: "$rootDir/gradle/java.gradle"

dependencies {
  api deps.slf4j
  api project(':internal-api')

  implementation project(path: ':dd-java-agent:agent-profiling:profiling-async', configuration: 'shadow')
  api project(':dd-java-agent:agent-profiling:profiling-auxiliary')
  api project(':dd-java-agent:agent-profiling:profiling-auxiliary-async')
  api project(':dd-java-agent:agent-profiling:profiling-context')
  api project(':dd-java-agent:agent-profiling:profiling-uploader')
  api project(':dd-java-agent:agent-profiling:profiling-controller')
  api project(':dd-java-agent:agent-profiling:profiling-controller-async')
  api project(':dd-java-agent:agent-profiling:profiling-controller-openjdk')
  api project(':dd-java-agent:agent-profiling:profiling-controller-oracle')
}

Project parent_project = project
subprojects { Project subProj ->
  subProj.tasks.withType(Test).configureEach { subTask ->
    onlyIf { !project.rootProject.hasProperty("skipProfilingTests") }

    // Make it so all instrumentation subproject tests can be run with a single command.
    if (parent_project.hasProperty(subTask.name)) {
      parent_project.tasks.named(subTask.name).configure {
        dependsOn(subTask)
      }
    }
  }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

configurations {
  // exclude bootstrap dependencies from shadowJar
  runtime.exclude module: deps.slf4j
  runtime.exclude group: 'org.slf4j'
}

shadowJar {
  dependencies deps.excludeShared
}

jar {
  classifier = 'unbundled'
}
