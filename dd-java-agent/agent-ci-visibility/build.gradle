import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.dsl.KotlinVersion

plugins {
  id 'com.gradleup.shadow'
  id 'org.jetbrains.kotlin.jvm' version libs.versions.kotlin.plugin
}

apply from: "$rootDir/gradle/java.gradle"
apply from: "$rootDir/gradle/version.gradle"
apply from: "$rootDir/gradle/test-with-kotlin.gradle"
apply from: "$rootDir/gradle/test-with-scala.gradle"

minimumBranchCoverage = 0.0
minimumInstructionCoverage = 0.0

dependencies {
  api libs.slf4j

  implementation libs.bundles.asm
  implementation group: 'org.jacoco', name: 'org.jacoco.core', version: '0.8.14'
  implementation group: 'org.jacoco', name: 'org.jacoco.report', version: '0.8.14'

  implementation project(':communication')
  implementation project(':components:json')
  implementation project(':internal-api')
  implementation project(':internal-api:internal-api-9')

  testImplementation project(':dd-java-agent:testing')
  testImplementation("com.google.jimfs:jimfs:1.1") // an in-memory file system for testing code that works with files

  testImplementation libs.scala
  testImplementation libs.kotlin

  testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.1'
  testImplementation group: 'org.freemarker', name: 'freemarker', version: '2.3.31'
  testImplementation group: 'org.msgpack', name: 'jackson-dataformat-msgpack', version: '0.9.6'
}

tasks.named("shadowJar", ShadowJar) {
  dependencies deps.excludeShared
}

tasks.named("jar", Jar) {
  archiveClassifier = 'unbundled'
}

tasks.named("compileTestGroovy") {
  configureCompiler(
    it,
    8,
    JavaVersion.VERSION_1_8,
    "Groovy generates synthetic accessors methods from superclass, we don't want that for `MisbehavingClassLoader`," +
    " otherwise anonymous class has one `loadClass` accessor's signature has `java.lang.Module`"
    )
}

kotlin {
  compilerOptions {
    jvmTarget = JvmTarget.JVM_1_8
    apiVersion = KotlinVersion.KOTLIN_1_6
    languageVersion = KotlinVersion.KOTLIN_1_6
  }
}
