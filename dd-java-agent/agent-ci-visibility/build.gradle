plugins {
  id 'com.github.johnrengelman.shadow'
  id 'java-test-fixtures'
}

apply from: "$rootDir/gradle/java.gradle"
apply from: "$rootDir/gradle/version.gradle"

minimumBranchCoverage = 0.7
minimumInstructionCoverage = 0.8

excludedClassesCoverage += [
  "datadog.trace.civisibility.CiVisibilitySystem",
  "datadog.trace.civisibility.DDTestModuleImpl",
  "datadog.trace.civisibility.DDTestSessionImpl",
  "datadog.trace.civisibility.DDTestSuiteImpl",
  "datadog.trace.civisibility.DDTestImpl",
  "datadog.trace.civisibility.context.AbstractTestContext",
  "datadog.trace.civisibility.context.EmptyTestContext",
  "datadog.trace.civisibility.context.ParentProcessTestContext",
  "datadog.trace.civisibility.context.SpanTestContext",
  "datadog.trace.civisibility.events.BuildEventsHandlerImpl",
  "datadog.trace.civisibility.events.TestEventsHandlerImpl",
  "datadog.trace.civisibility.events.TestDescriptor",
  "datadog.trace.civisibility.events.TestModuleDescriptor",
  "datadog.trace.civisibility.events.TestSuiteDescriptor",
  "datadog.trace.civisibility.git.GitObject",
]

dependencies {
  api deps.slf4j

  implementation deps.asm
  implementation deps.asmcommons

  implementation project(':internal-api')
  implementation project(':internal-api:internal-api-9')

  testImplementation project(":utils:test-utils")
  testImplementation("com.google.jimfs:jimfs:1.1") // an in-memory file system for testing code that works with files

  testFixturesApi project(':dd-java-agent:testing')
  testFixturesApi project(':utils:test-utils')
}

shadowJar {
  dependencies deps.excludeShared
}

jar {
  archiveClassifier = 'unbundled'
}
