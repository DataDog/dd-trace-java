plugins {
  id 'com.github.johnrengelman.shadow'
  id 'java-test-fixtures'
}

apply from: "$rootDir/gradle/java.gradle"
apply from: "$rootDir/gradle/version.gradle"

minimumBranchCoverage = 0.7
minimumInstructionCoverage = 0.8

excludedClassesCoverage += [
  "datadog.trace.civisibility.CiVisibilitySystem",
  "datadog.trace.civisibility.CiVisibilitySystem.1",
  "datadog.trace.civisibility.DDBuildSystemModuleImpl",
  "datadog.trace.civisibility.DDBuildSystemSessionImpl",
  "datadog.trace.civisibility.DDTestFrameworkModuleImpl",
  "datadog.trace.civisibility.DDTestFrameworkModuleProxy",
  "datadog.trace.civisibility.DDTestFrameworkModuleProxy.TestFrameworkData",
  "datadog.trace.civisibility.DDTestFrameworkSessionImpl",
  "datadog.trace.civisibility.DDTestFrameworkSessionProxy",
  "datadog.trace.civisibility.DDTestModuleImpl",
  "datadog.trace.civisibility.DDTestSessionImpl",
  "datadog.trace.civisibility.DDTestSuiteImpl",
  "datadog.trace.civisibility.DDTestImpl",
  "datadog.trace.civisibility.TestModuleRegistry",
  "datadog.trace.civisibility.ci.CIInfo",
  "datadog.trace.civisibility.ci.CIInfo.Builder",
  "datadog.trace.civisibility.communication.*",
  "datadog.trace.civisibility.config.JvmInfoFactory",
  "datadog.trace.civisibility.config.ConfigurationApi",
  "datadog.trace.civisibility.config.ModuleExecutionSettingsFactory",
  "datadog.trace.civisibility.config.JvmInfo",
  "datadog.trace.civisibility.config.JvmInfoFactory.JvmVersionOutputParser",
  "datadog.trace.civisibility.config.CachingModuleExecutionSettingsFactory",
  "datadog.trace.civisibility.config.CachingModuleExecutionSettingsFactory.Key",
  "datadog.trace.civisibility.config.CiVisibilitySettings",
  "datadog.trace.civisibility.config.ConfigurationApiImpl.MultiEnvelopeDto",
  "datadog.trace.civisibility.config.ConfigurationApi.1",
  "datadog.trace.civisibility.config.ModuleExecutionSettingsFactoryImpl",
  "datadog.trace.civisibility.config.SkippableTestsSerializer",
  "datadog.trace.civisibility.coverage.CoverageUtils",
  "datadog.trace.civisibility.coverage.CoverageUtils.RepoIndexFileLocator",
  "datadog.trace.civisibility.coverage.ExecutionDataAdapter",
  "datadog.trace.civisibility.coverage.NoopCoverageProbeStore",
  "datadog.trace.civisibility.coverage.NoopCoverageProbeStore.NoopCoverageProbeStoreFactory",
  "datadog.trace.civisibility.coverage.SegmentlessTestProbes",
  "datadog.trace.civisibility.coverage.SegmentlessTestProbes.SegmentlessTestProbesFactory",
  "datadog.trace.civisibility.coverage.SourceAnalyzer",
  "datadog.trace.civisibility.coverage.TestProbes",
  "datadog.trace.civisibility.coverage.TestProbes.TestProbesFactory",
  "datadog.trace.civisibility.events.BuildEventsHandlerImpl",
  "datadog.trace.civisibility.events.TestEventsHandlerImpl",
  "datadog.trace.civisibility.events.TestDescriptor",
  "datadog.trace.civisibility.events.TestModuleDescriptor",
  "datadog.trace.civisibility.events.TestSuiteDescriptor",
  "datadog.trace.civisibility.git.CILocalGitInfoBuilder",
  "datadog.trace.civisibility.git.GitClientGitInfoBuilder",
  "datadog.trace.civisibility.git.GitObject",
  "datadog.trace.civisibility.git.tree.*",
  "datadog.trace.civisibility.ipc.ModuleExecutionResult",
  "datadog.trace.civisibility.ipc.RepoIndexResponse",
  "datadog.trace.civisibility.ipc.RepoIndexRequest",
  "datadog.trace.civisibility.ipc.SignalServer",
  "datadog.trace.civisibility.ipc.SignalType",
  "datadog.trace.civisibility.ipc.SignalClient",
  "datadog.trace.civisibility.ipc.SignalClient.Factory",
  "datadog.trace.civisibility.ipc.SkippableTestsResponse",
  "datadog.trace.civisibility.source.MethodLinesResolver.MethodLines",
  "datadog.trace.civisibility.source.index.RepoIndexBuilder.RepoIndexingFileVisitor",
  "datadog.trace.civisibility.source.index.RepoIndexFetcher",
  "datadog.trace.civisibility.source.index.RepoIndexSourcePathResolver",
  "datadog.trace.civisibility.utils.ShellCommandExecutor",
  "datadog.trace.civisibility.utils.ShellCommandExecutor.OutputParser",
  "datadog.trace.civisibility.utils.SpanUtils"
]

dependencies {
  api deps.slf4j

  implementation deps.asm
  implementation deps.asmcommons
  implementation group: 'org.jacoco', name: 'org.jacoco.core', version: '0.8.9'
  implementation group: 'org.jacoco', name: 'org.jacoco.report', version: '0.8.9'

  implementation project(':communication')
  implementation project(':internal-api')
  implementation project(':internal-api:internal-api-9')

  testImplementation project(":utils:test-utils")
  testImplementation("com.google.jimfs:jimfs:1.1") // an in-memory file system for testing code that works with files

  testFixturesApi project(':dd-java-agent:testing')
  testFixturesApi project(':utils:test-utils')
}

shadowJar {
  dependencies deps.excludeShared
}

jar {
  archiveClassifier = 'unbundled'
}
