plugins {
  id 'io.franzbecker.gradle-lombok' version '4.0.0'

  id 'com.jfrog.artifactory' version '4.9.8'
  // ^ Last version to not have problems with NoSuchMethodError HttpClientBuilder.setPublicSuffixMatcher...
  // See also https://www.jfrog.com/jira/browse/GAP-317

  id 'com.jfrog.bintray' version '1.8.5'
  id 'com.github.ben-manes.versions' version '0.27.0'

  id "com.diffplug.spotless" version "5.11.0"
  id 'com.github.spotbugs' version '4.6.0'
  id 'com.dorongold.task-tree' version '1.5'
  id "de.thetaphi.forbiddenapis" version "3.1"

  id 'org.unbroken-dome.test-sets' version '3.0.1'
  id 'pl.allegro.tech.build.axion-release' version '1.10.3'

  id "com.github.johnrengelman.shadow" version "5.2.0" apply false
  id "me.champeau.jmh" version "0.6.2" apply false
}

def isCI = System.getenv("CI") != null

apply from: "$rootDir/gradle/scm.gradle"
apply from: "$rootDir/gradle/spotless.gradle"

allprojects {
  group = 'com.datadoghq'
  version = scmVersion.version

  if (isCI) {
    buildDir = "$rootDir/workspace/${projectDir.path.replace(rootDir.path, '')}/build/"
  }

  apply from: "$rootDir/gradle/dependencies.gradle"
  apply from: "$rootDir/gradle/util.gradle"
}

repositories {
  mavenLocal()
  mavenCentral()
}

description = 'dd-trace-java'

tasks.register("latestDepTest")

// Applied here to allow publishing of artifactory build info
apply from: "$rootDir/gradle/publish.gradle"

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

allprojects {
  tasks.withType(JavaForkOptions).configureEach {
    maxHeapSize = System.properties["datadog.forkedMaxHeapSize"]
    minHeapSize = System.properties["datadog.forkedMinHeapSize"]
    jvmArgs "-XX:ErrorFile=/tmp/hs_err_pid%p.log"
  }
}

task writeMuzzleTasksToFile {
  doLast {
    def muzzleFile = file("${buildDir}/muzzleTasks")
    assert muzzleFile.parentFile.mkdirs() || muzzleFile.parentFile.directory

    muzzleFile.text = subprojects.findAll { subproject -> subproject.plugins.hasPlugin('muzzle') }
    .collect { it.path + ":muzzle" }
    .join('\n')
  }
}
