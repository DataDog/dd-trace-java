abstract class WriteVersionNumberFile extends DefaultTask {
  @Input
  abstract Property<String> getVersion()

  @Input
  abstract Property<String> getGitHash()

  @OutputDirectory
  abstract DirectoryProperty getOutputDirectory()

  WriteVersionNumberFile() {
    // Set conventions (defaults)
    this.version.convention(project.provider { project.version.toString() })
    this.gitHash.convention(project.provider {
      def stdout = new ByteArrayOutputStream()
      project.exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
      }
      return stdout.toString().trim()
    })
    this.outputDirectory.convention(project.layout.buildDirectory.dir("generated/version"))
  }

  @TaskAction
  void writeVersionFile() {
    def versionFile = outputDirectory.file("${project.name}.version").get().asFile
    versionFile.parentFile.mkdirs()
    versionFile.text = "${version.get()}~${gitHash.get()}"
  }
}

def versionTask = tasks.register("writeVersionNumberFile", WriteVersionNumberFile)
sourceSets.main.resources.srcDir(versionTask)
