final class CachedData {
  static groovyVer = "2.5.13"
  static spockGroovyVer = groovyVer.replaceAll(/\.\d+$/, '')

  static versions = [
    slf4j         : "1.7.30",
    // The ranges are needed to allow instrumentation tests to specify the desired version.
    guava         : "[16.0,20.0]", // Last version to support Java 7
    okhttp        : "[3.0,3.12.12]", // 3.12.x is last version to support Java7)
    okio          : "1.16.0",

    spock         : "1.3-groovy-$spockGroovyVer",
    groovy        : groovyVer,
    junit5        : "5.6.2",
    logback       : "1.2.3",
    bytebuddy     : "1.12.0",
    scala         : "2.11.12",  // Last version to support Java 7 (2.12+ require Java 8+)
    scala210      : "2.10.7",
    scala211      : "2.11.12",
    scala212      : "2.12.12",
    scala213      : "2.13.4",
    kotlin        : "1.3.72",
    coroutines    : "1.3.0",
    dogstatsd     : "4.0.0",
    jnr_unixsocket: "0.28",
    commons       : "3.2",
    mockito       : '3.5.10',
    moshi         : '1.9.2',
    testcontainers: '1.15.0-rc2',
    jmc           : "8.1.0-SNAPSHOT",
    autoservice   : "1.0-rc7",
    asyncprofiler : "2.6-DD-20220125"
  ]

  static deps = [
    // General
    slf4j                : "org.slf4j:slf4j-api:${versions.slf4j}",
    guava                : "com.google.guava:guava:$versions.guava",
    moshi                : "com.squareup.moshi:moshi:${versions.moshi}",
    okhttp               : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
    okio                 : "com.squareup.okio:okio:${versions.okio}",
    bytebuddy            : "net.bytebuddy:byte-buddy:${versions.bytebuddy}",
    bytebuddyagent       : "net.bytebuddy:byte-buddy-agent:${versions.bytebuddy}",
    autoserviceProcessor : "com.google.auto.service:auto-service:${versions.autoservice}",
    autoserviceAnnotation: "com.google.auto.service:auto-service-annotations:${versions.autoservice}",
    commonsMath          : "org.apache.commons:commons-math3:${versions.commons}",

    // Testing

    spock                : [
      "org.spockframework:spock-core:${versions.spock}",
      // Used by Spock for mocking:
      "org.objenesis:objenesis:2.6" // Last version to support Java7
    ],
    groovy               : "org.codehaus.groovy:groovy-all:${versions.groovy}",
    junit5               : [
      "org.junit.jupiter:junit-jupiter:${versions.junit5}",
      "org.junit.jupiter:junit-jupiter-params:${versions.junit5}"
    ],
    mockito              : [
      "org.mockito:mockito-core:${versions.mockito}",
      "org.mockito:mockito-junit-jupiter:${versions.mockito}"
    ],
    testcontainers       : "org.testcontainers:testcontainers:${versions.testcontainers}",
    testLogging          : [
      "ch.qos.logback:logback-classic:${versions.logback}",
      "org.slf4j:log4j-over-slf4j:${versions.slf4j}",
      "org.slf4j:jcl-over-slf4j:${versions.slf4j}",
      "org.slf4j:jul-to-slf4j:${versions.slf4j}",
    ],
    scala                : "org.scala-lang:scala-library:${versions.scala}",
    scala210             : "org.scala-lang:scala-library:${versions.scala210}",
    scala211             : "org.scala-lang:scala-library:${versions.scala211}",
    scala212             : "org.scala-lang:scala-library:${versions.scala212}",
    scala213             : "org.scala-lang:scala-library:${versions.scala213}",
    kotlin               : "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
    coroutines           : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",

    jmc                  : [
      "org.openjdk.jmc:common:${versions.jmc}",
      "org.openjdk.jmc:flightrecorder:${versions.jmc}"
    ],

    // Shared between appsec, agent tooling, instrumentation, JMXFetch, and profiling
    shared               : [
      "com.squareup.okhttp3:okhttp:${versions.okhttp}",
      // Force specific version of okio required by com.squareup.moshi:moshi
      // When all of the dependencies are declared in dd-trace-core, moshi overrides the okhttp's
      // transitive dependency.  Since okhttp is declared here and moshi is not, this lead to an incompatible version
      "com.squareup.okio:okio:${versions.okio}",
      "com.datadoghq:java-dogstatsd-client:${versions.dogstatsd}",
      "com.github.jnr:jnr-unixsocket:${versions.jnr_unixsocket}",
    ],

    // Inverse of "shared".  These exclude directives are part of shadowJar's DSL
    // which is similar but not exactly the same as the regular gradle dependency{} block
    // Also, transitive dependencies have to be explicitly listed
    sharedInverse        : (Closure) {
      // dogstatsd and its transitives
      exclude(dependency('com.datadoghq:java-dogstatsd-client'))
      exclude(dependency('com.github.jnr::'))
      exclude(dependency('org.ow2.asm::'))

      // okhttp and its transitives
      exclude(dependency('com.squareup.okhttp3:okhttp'))
      exclude(dependency('com.squareup.okio:okio'))

      exclude(dependency("com.squareup.moshi:moshi:${versions.moshi}"))

      // container-utils/communication and transitives
      exclude(project(':communication'))

      exclude(project(':utils:container-utils'))
      exclude(dependency("org.slf4j:slf4j-api:${versions.slf4j}"))
    }
  ]
}

ext {
  versions = CachedData.versions
  deps = CachedData.deps
}
