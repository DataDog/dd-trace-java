import org.gradle.api.plugins.jvm.JvmTestSuite

ext.addTestSuiteExtendingForDir = (String testSuiteName, String parentSuiteName, String dirName) -> {
  testing {
    suites {
      create(testSuiteName, JvmTestSuite, {
        sources {
          java {
            srcDirs = ["src/$dirName/java"]
          }
          resources {
            srcDirs = ["src/$dirName/resources"]
          }
          if (project.plugins.hasPlugin('groovy')) {
            groovy {
              srcDirs = ["src/$dirName/groovy"]
            }
          }
          if (project.plugins.hasPlugin('kotlin')) {
            kotlin {
              srcDirs = ["src/$dirName/kotlin"]
            }
          }
          if (project.plugins.hasPlugin('scala')) {
            scala {
              srcDirs = ["src/$dirName/scala"]
            }
          }
        }
        dependencies {
          implementation project(project.path)
        }
      })
    }
  }

  configurations {
    def provider = named("${parentSuiteName}CompileOnly")
    if (provider.present) {
      named("${testSuiteName}CompileOnly").configure {
        extendsFrom(provider.get())
      }
    }
    provider = named("${parentSuiteName}Implementation")
    if (provider.present) {
      named("${testSuiteName}Implementation").configure {
        extendsFrom(provider.get())
      }
    }
    provider = named("${parentSuiteName}RuntimeOnly")
    if (provider.present) {
      named("${testSuiteName}RuntimeOnly").configure {
        extendsFrom(provider.get())
      }
    }
    provider = named("${parentSuiteName}AnnotationProcessor")
    if (provider.present) {
      named("${testSuiteName}AnnotationProcessor").configure {
        extendsFrom(provider.get())
      }
    }
  }

  tasks.register("${testSuiteName}Jar", Jar) {
    dependsOn(tasks.named("${testSuiteName}Classes").get())
    from(sourceSets.named(testSuiteName).get().output)
    archiveClassifier = testSuiteName
  }
}

ext.addTestSuiteForDir = (String testSuiteName, String dirName) -> {
  ext.addTestSuiteExtendingForDir(testSuiteName, 'test', dirName)
}

ext.addTestSuite = (String testSuiteName) -> {
  ext.addTestSuiteForDir(testSuiteName, testSuiteName)
}
