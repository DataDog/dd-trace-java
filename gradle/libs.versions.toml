[versions]
slf4j = "1.7.30"
# The ranges are needed to allow instrumentation tests to specify the desired version.
guava = "[16.0,20.0]" # Last version to support Java 7
okhttp = "3.12.15" # Datadog fork to support Java 7
okhttp-legacy = "[3.0,3.12.12]" # 3.12.x is last version to support Java7
okio = "1.17.6" # Datadog fork

spock = "2.2-groovy-3.0"
groovy = "3.0.17"
junit5 = "5.9.2"
logback = "1.2.3"
bytebuddy = "1.14.18"
scala = "2.11.12" # Last version to support Java 7 (2.12+ require Java 8+)
scala211 = "2.11.12"
scala212 = "2.12.18"
scala213 = "2.13.11"
scala33 = "3.3.0"
truth = "1.1.3"
kotlin = "1.6.21"
coroutines = "1.3.0"
dogstatsd = "4.4.0"
jnr-unixsocket = "0.38.22"
jnr-posix = '3.1.19'
commons = "3.2"
mockito = '4.4.0'
jctools = '3.3.0'
moshi = '1.11.0'
testcontainers = '1.20.1'
jmc = "8.1.0"
autoservice = "1.0-rc7"
ddprof = "1.17.0"
asm = "9.7"
cafe_crypto = "0.1.0"
lz4 = "1.7.1"

[libraries]
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
jctools = { module = "org.jctools:jctools-core", version.ref = "jctools" }
okhttp = { module = "com.datadoghq.okhttp3:okhttp", version.ref = "okhttp" }
okio = { module = "com.datadoghq.okio:okio", version.ref = "okio" }
bytebuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "bytebuddy" }
bytebuddyagent = { module = "net.bytebuddy:byte-buddy-agent", version.ref = "bytebuddy" }
autoservice-processor = { module = "com.google.auto.service:auto-service", version.ref = "autoservice" }
autoservice-annotation = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoservice" }
commons-math = { module = "org.apache.commons:commons-math3", version.ref = "commons" }
ddprof = { module = "com.datadoghq:ddprof", version.ref = "ddprof" }
asm = { module = "org.ow2.asm:asm", version.ref = "asm" }
asmcommons = { module = "org.ow2.asm:asm-commons", version.ref = "asm" }
dogstatsd = { module = "com.datadoghq:java-dogstatsd-client", version.ref = "dogstatsd" }
jnr-unixsocket = { module = "com.github.jnr:jnr-unixsocket", version.ref = "jnr-unixsocket"}

cafe-crypto-ed25519 = { module = "cafe.cryptography:ed25519-elisabeth", version.ref = "cafe_crypto" }
cafe-crypto-curve25519 = { module = "cafe.cryptography:curve25519-elisabeth", version.ref = "cafe_crypto" }

lz4 = { module = "org.lz4:lz4-java", version.ref = "lz4" }

# Testing
spock-core = { module = "org.spockframework:spock-core", version.ref = "spock" }
spock-junit4 = { module = "org.spockframework:spock-junit4", version.ref = "spock" }
objenesis = { module = "org.objenesis:objenesis", version = "3.3" } # Used by Spock for mocking:

groovy = { module = "org.codehaus.groovy:groovy-all", version.ref = "groovy" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5" }

mokito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mokito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
# needed for Java 21 support
byte-buddy = { module = "net.bytebuddy:byte-buddy", version.ref = "bytebuddy" }
byte-buddy-agent = { module = "net.bytebuddy:byte-buddy-agent", version.ref = "bytebuddy" }

testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
log4j-over-slf4j = { module = "org.slf4j:log4j-over-slf4j", version.ref = "slf4j" }
jcl-over-slf4j = { module = "org.slf4j:jcl-over-slf4j", version.ref = "slf4j" }
jul-to-slf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }

scala = { module = "org.scala-lang:scala-library", version.ref = "scala" }
scala211 = { module = "org.scala-lang:scala-library", version.ref = "scala211" }
scala212 = { module = "org.scala-lang:scala-library", version.ref = "scala212" }
scala213 = { module = "org.scala-lang:scala-library", version.ref = "scala213" }
scala33 = { module = "org.scala-lang:scala3-library_3", version.ref = "scala33" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

jmc-common = { module = "org.openjdk.jmc:common", version.ref = "jmc" }
jmc-flightrecorder = { module = "org.openjdk.jmc:flightrecorder", version.ref = "jmc" }

[bundles]
asm = ["asm", "asmcommons"]
cafe-crypto = ["cafe-crypto-curve25519", "cafe-crypto-ed25519"]
# Testing
spock = ["spock-core", "spock-junit4", "objenesis"]
junit5 = ["junit-jupiter", "junit-jupiter-params"]
mockito = ["mokito-core", "mokito-junit-jupiter", "byte-buddy", "byte-buddy-agent"]
test-logging = ["logback-classic", "log4j-over-slf4j", "jcl-over-slf4j", "jul-to-slf4j"]

jmc = ["jmc-common", "jmc-flightrecorder"]
