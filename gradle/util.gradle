tasks.register("artifacts") {
  group = "Help"
  description = "Displays the artifacts associated with each configuration of " + project
  doFirst {
    // This eager access is ok as it is during the task execution phase
    def builder = new StringBuilder()
    configurations.matching { it.name == "archives" }.each { config ->
      def outgoingFiles = config.outgoing.artifacts.getFiles()
      if (!outgoingFiles.isEmpty()) {
        builder.setLength(0)
        outgoingFiles.each { file ->
          def relPath = project.rootDir.toPath().relativize(file.toPath())
          builder.append(config).append(" (outgoing): ").append(relPath).append('\n')
        }
        logger.quiet(builder.toString())
      }
    }
  }
}

/** Find a random, reusable port. */
ext.randomOpenPort = {
  ->
  final ServerSocket socket
  try {
    socket = new ServerSocket(0)
    socket.setReuseAddress(true)
    socket.close()
    return socket.getLocalPort()
  } catch (final IOException ioe) {
    ioe.printStackTrace()
    return -1
  }
}
