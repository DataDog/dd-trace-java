buildscript {
  repositories {
    mavenLocal()
    if (project.rootProject.hasProperty("gradlePluginProxy")) {
      maven {
        url project.rootProject.property("gradlePluginProxy")
        allowInsecureProtocol true
      }
    }
    if (project.rootProject.hasProperty("mavenRepositoryProxy")) {
      maven {
        url project.rootProject.property("mavenRepositoryProxy")
        allowInsecureProtocol true
      }
    }
    gradlePluginPortal()
    mavenCentral()
  }

  dependencies {
    classpath "de.thetaphi:forbiddenapis:3.8"
  }
}

apply plugin: "de.thetaphi.forbiddenapis"

def mainFilterFile = files("$rootDir/gradle/forbiddenApiFilters/main.txt")

forbiddenApis {
  signaturesFiles = mainFilterFile
  ignoreSignaturesOfMissingClasses = true
  ignoreFailures = false
}

// disable forbiddenApis for all test tasks
afterEvaluate {
  tasks.matching({it.name.startsWith('forbiddenApis') && it.name.endsWith('Test')}).configureEach {
    it.enabled = false
  }
}

dependencies {
  compileOnly group: 'de.thetaphi', name: 'forbiddenapis', version: '3.8'
}
