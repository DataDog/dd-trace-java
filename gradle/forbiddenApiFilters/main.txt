# loads and instantiates a class which may be inefficient depending on context
java.lang.Class#forName(java.lang.String)

# String methods which uses regexes for matching
java.lang.String#split(java.lang.String)
java.lang.String#split(java.lang.String,int)
java.lang.String#replaceAll(java.lang.String,java.lang.String)
java.lang.String#replaceFirst(java.lang.String,java.lang.String)

# can initialize java.util.logging when ACCP is installed, prefer RandomUtils instead
java.util.UUID.randomUUID()

# prefer the NameMatchers/HierarchyMatchers equivalent instead
net.bytebuddy.matcher.ElementMatchers#named(java.lang.String)
net.bytebuddy.matcher.ElementMatchers#namedOneOf(java.lang.String[])
net.bytebuddy.matcher.ElementMatchers#hasSuperClass(net.bytebuddy.matcher.ElementMatcher)
net.bytebuddy.matcher.ElementMatchers#hasSuperType(net.bytebuddy.matcher.ElementMatcher)
net.bytebuddy.matcher.ElementMatchers#declaresField(net.bytebuddy.matcher.ElementMatcher)
net.bytebuddy.matcher.ElementMatchers#declaresMethod(net.bytebuddy.matcher.ElementMatcher)
net.bytebuddy.matcher.ElementMatchers#declaresAnnotation(net.bytebuddy.matcher.ElementMatcher)
net.bytebuddy.matcher.ElementMatchers#isAnnotatedWith(net.bytebuddy.matcher.ElementMatcher)
net.bytebuddy.matcher.ElementMatchers#inheritsAnnotation(net.bytebuddy.matcher.ElementMatcher)
net.bytebuddy.matcher.ElementMatchers#hasAnnotation(net.bytebuddy.matcher.ElementMatcher)
net.bytebuddy.matcher.ElementMatchers#isInterface()
net.bytebuddy.matcher.ElementMatchers#isAbstract()

# avoid System.out/err methods to prevent debug logging in production
@defaultMessage Avoid using System.out/err to prevent excess logging. To override, add @SuppressForbidden.
java.lang.System#out
java.lang.System#err

# prepare for JEP 500 (https://openjdk.org/jeps/500)
@defaultMessage Prepare to Make Final Mean Final - JEP 500
java.lang.reflect.Field#set(java.lang.Object,java.lang.Object)
java.lang.reflect.Field#setBoolean(java.lang.Object,boolean)
java.lang.reflect.Field#setByte(java.lang.Object,byte)
java.lang.reflect.Field#setChar(java.lang.Object,char)
java.lang.reflect.Field#setShort(java.lang.Object,short)
java.lang.reflect.Field#setInt(java.lang.Object,int)
java.lang.reflect.Field#setLong(java.lang.Object,long)
java.lang.reflect.Field#setFloat(java.lang.Object,float)
java.lang.reflect.Field#setDouble(java.lang.Object,double)
java.lang.invoke.MethodHandles.Lookup#unreflectSetter(java.lang.reflect.Field)
