version: 2

defaults: &defaults
  working_directory: ~/dd-trace-java
  resource_class: large
  docker:
    - image: circleci/openjdk:8

cache_keys: &cache_keys
  # Reset the cache approx every release
  keys:
    - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}-{{ .Branch }}-{{ .Revision }}
    - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}-{{ .Branch }}
    - dd-trace-java-{{ checksum "dd-trace-java.gradle" }}
    - dd-trace-java

test_job: &test_job
  steps:
    - checkout

    - restore_cache:
        <<: *cache_keys

    - run:
        name: Fix EC parameters error # (ref https://github.com/travis-ci/travis-ci/issues/8503)
        command: |
            if [ "${CIRCLE_JOB}" == "test_7" ]; then
              wget "https://downloads.bouncycastle.org/java/bcprov-ext-jdk15on-158.jar" -O "${JAVA_HOME}"/jre/lib/ext/bcprov-ext-jdk15on-158.jar && \
              perl -pi.bak -e 's/^(security\.provider\.)([0-9]+)/$1.($2+1)/ge' /etc/java-7-openjdk/security/java.security && \
              echo "security.provider.1=org.bouncycastle.jce.provider.BouncyCastleProvider" | tee -a /etc/java-7-openjdk/security/java.security
            fi

    - run:
        name: Run Tests
        command: GRADLE_OPTS="-Dorg.gradle.jvmargs=-Xmx2G -Xms512M" ./gradlew test --parallel --stacktrace --no-daemon --max-workers=3

    - run:
        name: Save Artifacts to (project-root)/build
        when: always
        command: .circleci/save_artifacts.sh

    - store_test_results:
        path: build/test-results

    - store_artifacts:
        path: build

jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/openjdk:8-jdk

    steps:
      - checkout

      - restore_cache:
          <<: *cache_keys

      - run:
          name: Build Project
          command: GRADLE_OPTS="-Dorg.gradle.jvmargs=-Xmx2G -Xms512M" ./gradlew clean check -x test --stacktrace --no-daemon

      - save_cache:
          key: dd-trace-java-{{ checksum "dd-trace-java.gradle" }}-{{ .Branch }}-{{ .Revision }}
          paths: ~/.gradle
          background: true

  test_7:
    <<: *defaults
    <<: *test_job
    docker:
      - image: openjdk:7-jdk

  test_8:
    <<: *defaults
    <<: *test_job
    docker:
      - image: circleci/openjdk:8-jdk

  test_9:
    <<: *defaults
    <<: *test_job
    docker:
      - image: circleci/openjdk:9-jdk

  scan_versions:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          # Reset the cache approx every release
          keys:
            - dd-trace-java-version-scan-{{ checksum "dd-trace-java.gradle" }}
            - dd-trace-java-version-scan

      - run:
          name: Verify Version Scan
          command: ./gradlew verifyVersionScan --parallel --stacktrace --no-daemon

      - run:
          name: Save Artifacts to (project-root)/build
          when: always
          command: .circleci/save_artifacts.sh

      - store_test_results:
          path: build/test-results

      - store_artifacts:
          path: build

      - save_cache:
          key: dd-trace-java-version-scan-{{ checksum "dd-trace-java.gradle" }}
          paths: ~/.gradle

  publish: &publish
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          <<: *cache_keys

      - run:
          name: Decode Signing Key
          command: echo $PGP_KEY_FILE | base64 --decode > /home/circleci/dd-trace-java/.circleci/secring.gpg

      - deploy:
          name: Publish master to Artifactory
          command: |
            ./gradlew -Psigning.keyId=${PGP_KEY_ID} \
              -Psigning.password=${PGP_KEY_PASS} \
              -Psigning.secretKeyRingFile=/home/circleci/dd-trace-java/.circleci/secring.gpg \
              -PbintrayUser=${BINTRAY_USER} \
              -PbintrayApiKey=${BINTRAY_API_KEY} \
              -PbuildInfo.build.number=${CIRCLE_BUILD_NUM} \
              artifactoryPublish --max-workers=1 --stacktrace --no-daemon

  publish_master:
    <<: *publish
  publish_tag:
    <<: *publish

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - test_7:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test_8:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test_9:
          requires:
            - build
          filters:
            tags:
              only: /.*/

      - scan_versions:
          requires:
            - build
          filters:
            branches:
              ignore: master

      - publish_master:
          requires:
            - test_7
            - test_8
            - test_9
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/

      - publish_tag:
          requires:
            - test_7
            - test_8
            - test_9
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
