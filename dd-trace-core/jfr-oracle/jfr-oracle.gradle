// Set properties before any plugins get loaded
ext {
  minJavaVersionForTests = JavaVersion.VERSION_1_8
  // Need to force Oracle JDK 8 since it is the only JDK compatible with this implementation
  forceJdk = ['ORACLE8']
  // By default tests will be compiled for `minJavaVersionForTests` version,
  // but in this case we would like to avoid this since we would like to run with ORACLE8
  skipSettingTestJavaVersion = true
  // need access to jdk.jfr package
  skipSettingCompilerRelease = true
}

apply from: "$rootDir/gradle/java.gradle"

dependencies {
  compile deps.slf4j
  compile project(':dd-trace-core')
  testCompile project(':dd-java-agent:testing')
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

[JavaCompile, GroovyCompile].each {
  tasks.withType(it) {
    doFirst {
      if (!System.env.JAVA_ORACLE8_HOME) {
        throw new GradleException('JAVA_ORACLE8_HOME must be set to build profiling helpers')
      }
      // Disable '-processing' because some annotations are not claimed.
      // Disable '-options' because we are compiling for java8 without specifying bootstrap - intentionally.
      // Disable '-path' because we do not have some of the paths seem to be missing.
      options.compilerArgs.addAll(['-Xlint:all,-processing,-options,-path'])
      options.fork = true
      options.forkOptions.javaHome = file(System.env.JAVA_ORACLE8_HOME)
    }
  }
}

// Oracle JDK requires extra JVM arguments to enable JFR
tasks.withType(Test).all {
  it.onlyIf {
    it.name.contains('ORACLE8')
  }

  it.jvmArgs += [
    "-XX:+IgnoreUnrecognizedVMOptions",
    "-XX:+UnlockCommercialFeatures",
    "-XX:+FlightRecorder"
  ]
}
