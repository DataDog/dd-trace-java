apply from: "$rootDir/gradle/java.gradle"

minimumBranchCoverage = 0.8

excludedClassesCoverage += [
  "datadog.trace.bootstrap.instrumentation.api.Tags",
  "datadog.trace.bootstrap.instrumentation.api.CommonTagValues",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopAgentPropagation",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopContext",
  "datadog.trace.bootstrap.instrumentation.api.InstrumentationTags",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopContinuation",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopAgentSpan",
  "datadog.trace.bootstrap.instrumentation.api.DDSpanNames",
  "datadog.trace.bootstrap.instrumentation.api.DDComponents",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopAgentScope",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopTracerAPI",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopAgentTrace",
  "datadog.trace.bootstrap.instrumentation.api.ScopeSource",
  "datadog.trace.mlt.MethodLevelTracer",
  "datadog.trace.mlt.MethodLevelTracer.NoSession",
  "datadog.trace.mlt.Invocation.Caller",
  "datadog.trace.mlt.Invocation",
]

sourceSets {
  main {
    java {
      srcDirs = ["src/main/java"]
    }
  }
  /*
   * can't be main_java9 as the global java.gradle adds some magic souce
   * to all main_* source roots and that will mess up the dependency order
   */
  java9Impl {
    java {
      srcDirs = ["src/main/java9Impl"]
    }
  }
}

dependencies {
  // references TraceScope and Continuation from public api
  compile project(':dd-trace-api')

  java9ImplCompile sourceSets.main.output
  java9ImplCompile deps.slf4j
  java9ImplCompileOnly "org.projectlombok:lombok:${project.lombok.version}" transitive false
  java9ImplAnnotationProcessor "org.projectlombok:lombok:${project.lombok.version}" transitive false

  testCompile project(":utils:test-utils")
  testRuntime sourceSets.java9Impl.output
}

compileJava9ImplJava {
  sourceCompatibility = 9
  targetCompatibility = 9
  options.fork = true
  options.forkOptions.javaHome = file(System.env.JAVA_11_HOME)
}

testClasses {
  dependsOn java9ImplClasses
}

jar {
  // need to include the custom Java 9+ impl classes
  from(sourceSets.java9Impl.output) {
    include '**/*.class'
  }
  dependsOn java9ImplClasses
}
