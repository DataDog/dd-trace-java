package datadog.trace.api.iast;

public class VulnerabilityMarks {

  private VulnerabilityMarks() {}

  public static final int NOT_MARKED = 0;

  public static final int XPATH_INJECTION_MARK = 1;
  public static final int SQL_INJECTION_MARK = 1 << 1;
  public static final int COMMAND_INJECTION_MARK = 1 << 2;
  public static final int PATH_TRAVERSAL_MARK = 1 << 3;
  public static final int LDAP_INJECTION_MARK = 1 << 4;
  public static final int SSRF_MARK = 1 << 5;
  public static final int UNVALIDATED_REDIRECT_MARK = 1 << 6;

  public static final int XSS_MARK = 1 << 7;

  public static final int TRUST_BOUNDARY_VIOLATION_MARK = 1 << 8;
  public static final int HEADER_INJECTION_MARK = 1 << 9;
  public static final int REFLECTION_INJECTION_MARK = 1 << 10;
  public static final int UNTRUSTED_DESERIALIZATION_MARK = 1 << 11;

  public static final int CUSTOM_SECURITY_CONTROL_MARK = 1 << 13;

  public static int markForAll() {
    return XSS_MARK
        | XPATH_INJECTION_MARK
        | SQL_INJECTION_MARK
        | COMMAND_INJECTION_MARK
        | PATH_TRAVERSAL_MARK
        | LDAP_INJECTION_MARK
        | SSRF_MARK
        | UNVALIDATED_REDIRECT_MARK
        | TRUST_BOUNDARY_VIOLATION_MARK
        | HEADER_INJECTION_MARK
        | REFLECTION_INJECTION_MARK
        | UNTRUSTED_DESERIALIZATION_MARK
        | CUSTOM_SECURITY_CONTROL_MARK;
  }

  public static int getMarkFromVulnerabitityType(final String vulnerabilityTypeString) {
    switch (vulnerabilityTypeString) {
      case "XSS":
        return XSS_MARK;
      case "XPATH_INJECTION":
        return XPATH_INJECTION_MARK;
      case "SQL_INJECTION":
        return SQL_INJECTION_MARK;
      case "COMMAND_INJECTION":
        return COMMAND_INJECTION_MARK;
      case "PATH_TRAVERSAL":
        return PATH_TRAVERSAL_MARK;
      case "LDAP_INJECTION":
        return LDAP_INJECTION_MARK;
      case "SSRF":
        return SSRF_MARK;
      case "UNVALIDATED_REDIRECT":
        return UNVALIDATED_REDIRECT_MARK;
      case "TRUST_BOUNDARY_VIOLATION":
        return TRUST_BOUNDARY_VIOLATION_MARK;
      case "HEADER_INJECTION":
        return HEADER_INJECTION_MARK;
      case "REFLECTION_INJECTION":
        return REFLECTION_INJECTION_MARK;
      case "UNTRUSTED_DESERIALIZATION":
        return UNTRUSTED_DESERIALIZATION_MARK;
      case "CUSTOM_SECURITY_CONTROL":
        return CUSTOM_SECURITY_CONTROL_MARK;
      default:
        return NOT_MARKED;
    }
  }
}
