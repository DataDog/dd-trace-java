package datadog.trace.api.iast;

public abstract class VulnerabilityTypes {

  private VulnerabilityTypes() {}

  public static final String WEAK_CIPHER = "WEAK_CIPHER";
  public static final String WEAK_HASH = "WEAK_HASH";
  public static final String SQL_INJECTION = "SQL_INJECTION";
  public static final String COMMAND_INJECTION = "COMMAND_INJECTION";
  public static final String PATH_TRAVERSAL = "PATH_TRAVERSAL";
  public static final String LDAP_INJECTION = "LDAP_INJECTION";
  public static final String SSRF = "SSRF";
  public static final String INSECURE_COOKIE = "INSECURE_COOKIE";
  public static final String NO_HTTPONLY_COOKIE = "NO_HTTPONLY_COOKIE";
  public static final String NO_SAMESITE_COOKIE = "NO_SAMESITE_COOKIE";
  public static final String UNVALIDATED_REDIRECT = "UNVALIDATED_REDIRECT";
  public static final String WEAK_RANDOMNESS = "WEAK_RANDOMNESS";
  public static final String XPATH_INJECTION = "XPATH_INJECTION";

  /**
   * Use for telemetry only, this is a special vulnerability type that is not reported, reported
   * values will be {@link #RESPONSE_HEADER_TYPES}
   */
  public static final String RESPONSE_HEADER = "RESPONSE_HEADER";

  public static final String[] RESPONSE_HEADER_TYPES = {UNVALIDATED_REDIRECT, INSECURE_COOKIE};

  private static final String[] values = {
    WEAK_CIPHER,
    WEAK_HASH,
    SQL_INJECTION,
    COMMAND_INJECTION,
    PATH_TRAVERSAL,
    LDAP_INJECTION,
    SSRF,
    INSECURE_COOKIE,
    NO_HTTPONLY_COOKIE,
    UNVALIDATED_REDIRECT,
    WEAK_RANDOMNESS,
    XPATH_INJECTION
  };

  public static String[] values() {
    return values;
  }
}
