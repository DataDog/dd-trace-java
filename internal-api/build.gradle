plugins {
  id 'me.champeau.jmh'
}

apply from: "$rootDir/gradle/java.gradle"
apply from: "$rootDir/gradle/tries.gradle"

minimumBranchCoverage = 0.7
minimumInstructionCoverage = 0.8

excludedClassesCoverage += [
  "datadog.trace.api.Platform",
  "datadog.trace.api.StatsDClient",
  "datadog.trace.api.NoOpStatsDClient",
  "datadog.trace.api.TraceSegment.NoOp",
  "datadog.trace.api.intake.TrackType",
  "datadog.trace.api.gateway.Events.ET",
  "datadog.trace.api.profiling.ProfilingSnapshot.Kind",
  // an enum
  "datadog.trace.api.sampling.AdaptiveSampler",
  // this one is covered by tests in internal-api-8 together with AdaptiveSampler8
  "datadog.trace.api.sampling.AdaptiveSampler7*",
  "datadog.trace.api.sampling.ConstantSampler",
  // to be decomissioned
  "datadog.trace.api.SamplingCheckpointer",
  "datadog.trace.bootstrap.ActiveSubsystems",
  "datadog.trace.bootstrap.config.provider.ConfigProvider.Singleton",
  "datadog.trace.bootstrap.instrumentation.api.Tags",
  "datadog.trace.bootstrap.instrumentation.api.CommonTagValues",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopAgentPropagation",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopContext",
  "datadog.trace.bootstrap.instrumentation.api.InstrumentationTags",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopContinuation",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopAgentSpan",
  "datadog.trace.bootstrap.instrumentation.api.DDComponents",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopAgentScope",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopTracerAPI",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopAgentTrace",
  "datadog.trace.bootstrap.instrumentation.api.AgentTracer.NoopPathwayContext",
  "datadog.trace.bootstrap.instrumentation.api.StatsPoint",
  "datadog.trace.bootstrap.instrumentation.api.ScopeSource",
  "datadog.trace.bootstrap.instrumentation.api.InternalSpanTypes",
  "datadog.trace.bootstrap.instrumentation.api.TagContext",
  "datadog.trace.bootstrap.instrumentation.api.TagContext.HttpHeaders",
  "datadog.trace.bootstrap.instrumentation.api.ForwardedTagContext",
  "datadog.trace.bootstrap.instrumentation.api.ResourceNamePriorities",
  "datadog.trace.bootstrap.instrumentation.ci.git.GitInfo",
  "datadog.trace.bootstrap.instrumentation.ci.git.GitInfo.GitInfoBuilder",
  "datadog.trace.bootstrap.instrumentation.ci.git.CommitInfo",
  "datadog.trace.bootstrap.instrumentation.ci.git.CommitInfo.CommitInfoBuilder",
  "datadog.trace.bootstrap.instrumentation.ci.git.PersonInfo",
  "datadog.trace.bootstrap.instrumentation.ci.git.PersonInfo.PersonInfoBuilder",
  "datadog.trace.bootstrap.instrumentation.ci.git.GitObject",
  "datadog.trace.bootstrap.instrumentation.ci.git.GitObject.GitObjectBuilder",
  "datadog.trace.bootstrap.instrumentation.ci.CIProviderInfo.CIInfo",
  "datadog.trace.bootstrap.instrumentation.ci.CIProviderInfo.CIInfo.CIInfoBuilder",
  "datadog.trace.logging.LoggingSettingsDescription",
  "datadog.trace.util.AgentProxySelector",
  "datadog.trace.util.AgentTaskScheduler",
  "datadog.trace.util.AgentTaskScheduler.PeriodicTask",
  "datadog.trace.util.AgentTaskScheduler.ShutdownHook",
  "datadog.trace.util.AgentThreadFactory",
  "datadog.trace.util.AgentThreadFactory.1",
  "datadog.trace.util.ClassNameTrie.Builder",
  "datadog.trace.util.ClassNameTrie.JavaGenerator",
  "datadog.trace.util.CollectionUtils",
  "datadog.trace.api.IntegrationsCollector.Holder",
  "datadog.trace.api.ConfigCollector.Holder"
]
excludedClassesBranchCoverage = ['datadog.trace.api.ProductActivationConfig',]

compileTestJava.dependsOn 'generateTestClassNameTries'

dependencies {
  // references TraceScope and Continuation from public api
  api project(':dd-trace-api')
  api deps.slf4j
  api project(":utils:time-utils")

  testImplementation project(":utils:test-utils")
  testImplementation("org.assertj:assertj-core:2.9.1")
}

jmh {
  jmhVersion = '1.32'
  duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
}
