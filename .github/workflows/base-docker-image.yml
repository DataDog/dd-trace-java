name: "base-docker-image"

on:
  pull_request:
    branches:
    - '**'
  push:
    branches:
    - main

jobs:

  build-and-publish-base-image:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # 2.0.0

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # 2.0.0

    - name: Set up Docker platforms
      id: buildx-platforms
      run:  |
        BUILDX_PLATFORMS=`docker buildx imagetools inspect --raw busybox:latest | jq -r 'reduce (.manifests[] | [ .platform.os, .platform.architecture, .platform.variant ] | join("/") | sub("\\/$"; "")) as $item (""; . + "," + $item)' | sed 's/,//'`
        echo "$BUILDX_PLATFORMS"
        echo "platforms=$BUILDX_PLATFORMS" >> $GITHUB_OUTPUT

    - name: Login to Docker
      run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

    - name: Build dd-trace-java for creating the CodeQL database
      run: JAVA_HOME=$JAVA_HOME_8_X64 JAVA_8_HOME=$JAVA_HOME_8_X64 JAVA_11_HOME=$JAVA_HOME_11_X64 JAVA_17_HOME=$JAVA_HOME_17_X64 ./gradlew clean :dd-java-agent:shadowJar --build-cache --parallel --stacktrace --no-daemon --max-workers=8

    - name: prepare-image
      run: |   

          mv workspace/dd-java-agent/build/libs/dd-java-agent*.jar base-docker-image/dd-java-agent.jar
          
          #Library version
          cat workspace/dd-java-agent/build/resources/main/dd-java-agent.version > base-docker-image/LIBRARY_VERSION
          LIBRARY_VERSION=$(cat base-docker-image/LIBRARY_VERSION)

          #WAF version
          touch base-docker-image/LIBDDWAF_VERSION

          #AppSec and IAST
          cat workspace/dd-java-agent/build/resources/main/appsec/appsec.version > base-docker-image/APPSEC_VERSION
          cat workspace/dd-java-agent/build/resources/main/iast/agent-iast.version > base-docker-image/IAST_VERSION

          #Event rules
          if [[ $LIBRARY_VERSION == 0.96* ]]; then
            echo "1.2.5" > base-docker-image/APPSEC_EVENT_RULES_VERSION
          else
            cat workspace/dd-java-agent/build/resources/main/appsec/default_config.json | \
              grep rules_version | head -1 | awk -F'"' '{print $4;}' \
              > base-docker-image/APPSEC_EVENT_RULES_VERSION
          fi

          #Debug 
          echo "Building base docker image with content:"
          ls
          echo "LIBRARY version: ${LIBRARY_VERSION}"
          echo "WAF version: $(cat base-docker-image/LIBDDWAF_VERSION)"
          echo "APPSEC version: $(cat base-docker-image/APPSEC_VERSION)"
          echo "IAST version: $(cat base-docker-image/IAST_VERSION)"
          echo "APPSEC RULES version: $(cat base-docker-image/APPSEC_EVENT_RULES_VERSION)"

    - name: Docker Build
      uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # 3.2.0
      with:
        push: true
        tags: ghcr.io/datadog/dd-trace-java/dd-java-agent:test_latest_snapshot,ghcr.io/datadog/dd-trace-java/dd-java-agent:test_latest,ghcr.io/datadog/dd-trace-java:${{ github.sha }}
        platforms: ${{ steps.buildx-platforms.outputs.platforms }}
        context: ./base-docker-image