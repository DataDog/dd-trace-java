name: "Lib Injection Test"

on:
  workflow_run:
    workflows: [CodeQL]
    types:
      - completed

jobs:

  build-and-publish-base-image:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # 2.0.0

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # 2.0.0

    - name: Set up Docker platforms
      id: buildx-platforms
      run:  |
        BUILDX_PLATFORMS=`docker buildx imagetools inspect --raw busybox:latest | jq -r 'reduce (.manifests[] | [ .platform.os, .platform.architecture, .platform.variant ] | join("/") | sub("\\/$"; "")) as $item (""; . + "," + $item)' | sed 's/,//'`
        echo "$BUILDX_PLATFORMS"
        echo "platforms=$BUILDX_PLATFORMS" >> $GITHUB_OUTPUT

    - name: Login to Docker
      run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

    - name: 'Download dd-java-agent'
      uses: actions/github-script@v6
      with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "dd-java-agent"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/dd-java-agent.zip`, Buffer.from(download.data));

    - name: 'Unzip dd-java-agent'
      run: |
        unzip dd-java-agent.zip
        echo "debug ls"
        ls
        mv dd-java-agent*.jar base-docker-image/

    - name: Docker Build
      uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # 3.2.0
      with:
        push: true
        tags: ghcr.io/datadog/dd-trace-java/dd-java-agent:test_latest_snapshot
        platforms: ${{ steps.buildx-platforms.outputs.platforms }}
        context: ./base-docker-image