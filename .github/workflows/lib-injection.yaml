name: "Lib Injection Test"
on:
  push:
    branches:
      - master
      - 'releases/*'
  pull_request:
    branches:
      - master

jobs:

  injection-tests-java:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        lib-injection-connection: [ 'network','uds']
        lib-injection-use-admission-controller: ['', 'use-admission-controller']
      fail-fast: false
    env:
      TEST_LIBRARY: java
      LIBRARY_INJECTION_CONNECTION: ${{ matrix.lib-injection-connection }}
      LIBRARY_INJECTION_ADMISSION_CONTROLLER: ${{ matrix.lib-injection-admission-controller }}
      LIBRARY_INJECTION_INIT_IMAGE: ghcr.io/datadog/system-tests/dd-lib-java-init:${{ github.sha }}
      LIBRARY_INJECTION_TEST_APP_IMAGE: ghcr.io/datadog/system-tests/dd-lib-java-init-test-app:${{ github.sha }}

    steps:
      - name: Checkout dd-trace-java
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4

      - name: Checkout system tests
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
        with:
          repository: 'DataDog/system-tests'
          ref: 'robertomonteromiguel/lib_injection_integration'
          path: './system-tests'

      - name: Log in to the Container registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # 2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    #  - name: Load library binary (TODO)
    #    run: ./utils/scripts/load-binary.sh java
      - name: Set up QEMU
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # 2.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # 2.0.0
        with: 
          install: true
          config-inline: |
            [worker.oci]
              max-parallelism = 1

      - name: DEBUG WORKSPACE -1
        run: ls 

      - name: DEBUG WORKSPACE -3
        run: pwd 
 
      - name: DEBUG WORKSPACE 0
        run: ls dd-java-agent/

      - name: Build dd-java-agent.jar
        run: JAVA_HOME=$JAVA_HOME_11_X64 ./gradlew dd-java-agent:build

      - name: ShadowJar dd-java-agent.jar
        run: JAVA_HOME=$JAVA_HOME_11_X64 ./gradlew dd-java-agent:shadowJar


      - name: DEBUG WORKSPACE 1
        run: ls 

      - name: DEBUG WORKSPACE 15
        run: ls build/

      - name: DEBUG WORKSPACE 2
        run: ls dd-java-agent/

      - name: Copy Java agent
        run: cp dd-java-agent/build/libs/dd-java-agent-*.jar system-tests/binaries/dd-java-agent.jar

      - name: Build test images
        run: ./system-tests/lib-injection/run.sh build-test-app-image push-test-app-image build-and-push-init-image

      - name: Build
        run: ./system-tests/lib-injection/build.sh

      - name: Run
        run: ./system-tests/lib-injection/run-lib-injection.sh
