name: "Lib Injection Test"
on:
  push:
    branches:
      - master
      - 'release/*'
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:

  build-and-publish-init-image:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # 2.0.0

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # 2.0.0
      with:
        version: v0.9.1 # https://github.com/docker/buildx/issues/1533

    - name: Set up Docker platforms
      id: buildx-platforms
      run:  |
        BUILDX_PLATFORMS=`docker buildx imagetools inspect --raw alpine:3.18.3 | jq -r 'reduce (.manifests[] | [ .platform.os, .platform.architecture, .platform.variant ] | join("/") | sub("\\/$"; "")) as $item (""; . + "," + $item)' | sed 's/,//'`
        echo "$BUILDX_PLATFORMS"
        echo "platforms=$BUILDX_PLATFORMS" >> $GITHUB_OUTPUT

    - name: lib-injection-tags
      id: lib-injection-tags
      uses: DataDog/system-tests/lib-injection/docker-tags@89d754340046eafcc72dc5c5fd6ea651ca7b920e # main
      with:
        init-image-name: 'dd-lib-java-init'
        main-branch-name: 'master'

    - name: Build dd-java-agent.jar
      run:  ./lib-injection/build_java_agent.sh

    - name: Login to Docker
      run: docker login -u publisher -p ${{ secrets.GITHUB_TOKEN }} ghcr.io

    - name: Docker Build
      uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5 # 3.2.0
      with:
        push: true
        tags: ${{ steps.lib-injection-tags.outputs.tag-names }}
        platforms: ${{ steps.buildx-platforms.outputs.platforms }}
        context: ./lib-injection

  injection-tests:
    needs:
      - build-and-publish-init-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      TEST_LIBRARY: java
      WEBLOG_VARIANT: dd-lib-java-init-test-app
      DOCKER_REGISTRY_IMAGES_PATH: ghcr.io/datadog
      DOCKER_IMAGE_TAG: ${{ github.sha }}
      BUILDX_PLATFORMS: linux/amd64
    steps:
    - name: Checkout system tests
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4
      with:
          repository: 'DataDog/system-tests'

    - name: Install runner
      uses: ./.github/actions/install_runner 

    - name: Run K8s Lib Injection Tests
      run: ./run.sh K8S_LIB_INJECTION_BASIC

    - name: Compress logs
      id: compress_logs
      if: always()
      run: tar -czvf artifact.tar.gz $(ls | grep logs)

    - name: Upload artifact
      if: always()
      uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # 2.3.1
      with:
        name: logs_k8s_lib_injection
        path: artifact.tar.gz