name: "Lib Injection Test"
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-app-image-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4

      - name: Log in to the Container registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # 2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build app image
        run: |
          JAVA_HOME=$JAVA_HOME_8_X64 JAVA_8_HOME=$JAVA_HOME_8_X64 JAVA_11_HOME=$JAVA_HOME_11_X64 \
          ./lib-injection/run.sh build-test-app-image push-test-app-image

  lib-injection-image-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4

      - name: Log in to the Container registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # 2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8 # 2.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # 2.0.0
        with:
          install: true
          config-inline: |
            [worker.oci]
              max-parallelism = 1

      - name: Build dd-java-agent.jar
        run: JAVA_HOME=$JAVA_HOME_8_X64 JAVA_8_HOME=$JAVA_HOME_8_X64 JAVA_11_HOME=$JAVA_HOME_11_X64 ./gradlew clean shadowJar --build-cache --parallel --no-daemon --max-workers=8

      - name: Build injection image
        run: |
          ./lib-injection/run.sh build-and-push-init-image

  lib-injection-test:
    needs:
      - lib-injection-image-build
      - test-app-image-build
    strategy:
      fail-fast: false
      matrix:
        use-admission-controller: [ "", "use-admission-controller" ]
        use-uds: [ "", "use-uds" ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # 2.3.4

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@d08cf6ff1575077dee99962540d77ce91c62387d # 1.3.0
        with:
          config: lib-injection/src/test/resources/kind-config.yaml
          cluster_name: lib-injection-testing
          kubectl_version: v1.22.10
          node_image: kindest/node:v1.22.9

      - name: Install helm
        uses: azure/setup-helm@b5b231a831f96336bbfeccc1329990f0005c5bb1 # 3.3
        with:
          version: 'latest' # default is latest (stable)
          token: ${{ secrets.GITHUB_TOKEN }} # only needed if version is 'latest'

      - name: Deploy apm test trace agent
        run: |
          ./lib-injection/run.sh ${{ matrix.use-uds }} ${{ matrix.use-admission-controller }} deploy-agents

      - name: Deploy pre-modified pod
        run: |
          ./lib-injection/run.sh ${{ matrix.use-uds }} ${{ matrix.use-admission-controller }} create-app-config deploy-app

      - name: Test
        run: |
          ./lib-injection/run.sh test-for-traces

      - name: Get app output for debugging
        if: ${{ failure() }}
        run: kubectl logs pod/my-app

      - name: Get agent output for debugging
        if: ${{ failure() }}
        run: kubectl logs daemonset/datadog
